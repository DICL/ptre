// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rdma_service.proto

#include "rdma_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rdma_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MemoryRegion_rdma_5fservice_2eproto;
namespace ptre {
class MemoryRegionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MemoryRegion> _instance;
} _MemoryRegion_default_instance_;
class GetLIDRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLIDRequest> _instance;
} _GetLIDRequest_default_instance_;
class GetLIDResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLIDResponse> _instance;
} _GetLIDResponse_default_instance_;
class GetQPAttrRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetQPAttrRequest> _instance;
} _GetQPAttrRequest_default_instance_;
class GetQPAttrResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetQPAttrResponse> _instance;
} _GetQPAttrResponse_default_instance_;
class GetRemoteAddressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteAddressRequest> _instance;
} _GetRemoteAddressRequest_default_instance_;
class GetRemoteAddressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteAddressResponse> _instance;
} _GetRemoteAddressResponse_default_instance_;
class GetRemoteEnvRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteEnvRequest> _instance;
} _GetRemoteEnvRequest_default_instance_;
class GetRemoteEnvResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteEnvResponse> _instance;
} _GetRemoteEnvResponse_default_instance_;
class GetRemoteParamAddressRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteParamAddressRequest> _instance;
} _GetRemoteParamAddressRequest_default_instance_;
class GetRemoteParamAddressResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteParamAddressResponse> _instance;
} _GetRemoteParamAddressResponse_default_instance_;
class AttemptPushRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AttemptPushRequest> _instance;
} _AttemptPushRequest_default_instance_;
class AttemptPushResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AttemptPushResponse> _instance;
} _AttemptPushResponse_default_instance_;
class NotifyPushDoneRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotifyPushDoneRequest> _instance;
} _NotifyPushDoneRequest_default_instance_;
class NotifyPushDoneResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotifyPushDoneResponse> _instance;
} _NotifyPushDoneResponse_default_instance_;
class BarrierRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BarrierRequest> _instance;
} _BarrierRequest_default_instance_;
class BarrierResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BarrierResponse> _instance;
} _BarrierResponse_default_instance_;
class GetRemoteAddressV2RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteAddressV2Request> _instance;
} _GetRemoteAddressV2Request_default_instance_;
class GetRemoteAddressV2ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRemoteAddressV2Response> _instance;
} _GetRemoteAddressV2Response_default_instance_;
class RecvRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecvRequest> _instance;
} _RecvRequest_default_instance_;
class RecvResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecvResponse> _instance;
} _RecvResponse_default_instance_;
class GetPermitRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermitRequest> _instance;
} _GetPermitRequest_default_instance_;
class GetPermitResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPermitResponse> _instance;
} _GetPermitResponse_default_instance_;
class AttemptPushVarRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AttemptPushVarRequest> _instance;
} _AttemptPushVarRequest_default_instance_;
class AttemptPushVarResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AttemptPushVarResponse> _instance;
} _AttemptPushVarResponse_default_instance_;
class CancelPushVarRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelPushVarRequest> _instance;
} _CancelPushVarRequest_default_instance_;
class CancelPushVarResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CancelPushVarResponse> _instance;
} _CancelPushVarResponse_default_instance_;
}  // namespace ptre
static void InitDefaultsscc_info_AttemptPushRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_AttemptPushRequest_default_instance_;
    new (ptr) ::ptre::AttemptPushRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::AttemptPushRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AttemptPushRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AttemptPushRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_AttemptPushResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_AttemptPushResponse_default_instance_;
    new (ptr) ::ptre::AttemptPushResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::AttemptPushResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AttemptPushResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AttemptPushResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_AttemptPushVarRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_AttemptPushVarRequest_default_instance_;
    new (ptr) ::ptre::AttemptPushVarRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::AttemptPushVarRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AttemptPushVarRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AttemptPushVarRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_AttemptPushVarResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_AttemptPushVarResponse_default_instance_;
    new (ptr) ::ptre::AttemptPushVarResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::AttemptPushVarResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AttemptPushVarResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_AttemptPushVarResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_BarrierRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_BarrierRequest_default_instance_;
    new (ptr) ::ptre::BarrierRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::BarrierRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BarrierRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BarrierRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_BarrierResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_BarrierResponse_default_instance_;
    new (ptr) ::ptre::BarrierResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::BarrierResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BarrierResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_BarrierResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CancelPushVarRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_CancelPushVarRequest_default_instance_;
    new (ptr) ::ptre::CancelPushVarRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::CancelPushVarRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelPushVarRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_CancelPushVarRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_CancelPushVarResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_CancelPushVarResponse_default_instance_;
    new (ptr) ::ptre::CancelPushVarResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::CancelPushVarResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CancelPushVarResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_CancelPushVarResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetLIDRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetLIDRequest_default_instance_;
    new (ptr) ::ptre::GetLIDRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetLIDRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLIDRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetLIDRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetLIDResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetLIDResponse_default_instance_;
    new (ptr) ::ptre::GetLIDResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetLIDResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLIDResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetLIDResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetPermitRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetPermitRequest_default_instance_;
    new (ptr) ::ptre::GetPermitRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetPermitRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermitRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetPermitRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetPermitResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetPermitResponse_default_instance_;
    new (ptr) ::ptre::GetPermitResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetPermitResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPermitResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetPermitResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetQPAttrRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetQPAttrRequest_default_instance_;
    new (ptr) ::ptre::GetQPAttrRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetQPAttrRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetQPAttrRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetQPAttrRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetQPAttrResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetQPAttrResponse_default_instance_;
    new (ptr) ::ptre::GetQPAttrResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetQPAttrResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetQPAttrResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetQPAttrResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteAddressRequest_default_instance_;
    new (ptr) ::ptre::GetRemoteAddressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteAddressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteAddressResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteAddressResponse_default_instance_;
    new (ptr) ::ptre::GetRemoteAddressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteAddressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteAddressResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteAddressResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteAddressV2Request_default_instance_;
    new (ptr) ::ptre::GetRemoteAddressV2Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteAddressV2Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteAddressV2Response_default_instance_;
    new (ptr) ::ptre::GetRemoteAddressV2Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteAddressV2Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto}, {
      &scc_info_MemoryRegion_rdma_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_GetRemoteEnvRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteEnvRequest_default_instance_;
    new (ptr) ::ptre::GetRemoteEnvRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteEnvRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteEnvRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteEnvRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteEnvResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteEnvResponse_default_instance_;
    new (ptr) ::ptre::GetRemoteEnvResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteEnvResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteEnvResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteEnvResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteParamAddressRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteParamAddressRequest_default_instance_;
    new (ptr) ::ptre::GetRemoteParamAddressRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteParamAddressRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRemoteParamAddressRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GetRemoteParamAddressRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_GetRemoteParamAddressResponse_default_instance_;
    new (ptr) ::ptre::GetRemoteParamAddressResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::GetRemoteParamAddressResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto}, {
      &scc_info_MemoryRegion_rdma_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_MemoryRegion_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_MemoryRegion_default_instance_;
    new (ptr) ::ptre::MemoryRegion();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::MemoryRegion::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MemoryRegion_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_MemoryRegion_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_NotifyPushDoneRequest_default_instance_;
    new (ptr) ::ptre::NotifyPushDoneRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::NotifyPushDoneRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_NotifyPushDoneResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_NotifyPushDoneResponse_default_instance_;
    new (ptr) ::ptre::NotifyPushDoneResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::NotifyPushDoneResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotifyPushDoneResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_NotifyPushDoneResponse_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RecvRequest_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_RecvRequest_default_instance_;
    new (ptr) ::ptre::RecvRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::RecvRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecvRequest_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RecvRequest_rdma_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RecvResponse_rdma_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ptre::_RecvResponse_default_instance_;
    new (ptr) ::ptre::RecvResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ptre::RecvResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecvResponse_rdma_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RecvResponse_rdma_5fservice_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_rdma_5fservice_2eproto[27];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_rdma_5fservice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_rdma_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_rdma_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::MemoryRegion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::MemoryRegion, remote_addr_),
  PROTOBUF_FIELD_OFFSET(::ptre::MemoryRegion, rkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetLIDRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetLIDResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetLIDResponse, lid_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetLIDResponse, gid_h_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetLIDResponse, gid_l_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetQPAttrRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetQPAttrRequest, src_rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetQPAttrResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetQPAttrResponse, qpn_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetQPAttrResponse, psn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressRequest, buf_type_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressRequest, var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressResponse, remote_addr_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressResponse, rkey_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvRequest, rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, lid_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, qpn_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, snp_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteEnvResponse, iid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteParamAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteParamAddressRequest, rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteParamAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteParamAddressResponse, rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteParamAddressResponse, mr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushRequest, rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushRequest, vstep_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushResponse, available_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::NotifyPushDoneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::NotifyPushDoneRequest, src_rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::NotifyPushDoneRequest, var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::NotifyPushDoneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::BarrierRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::BarrierResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::BarrierResponse, entered_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Request, rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Request, type_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Request, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Response, rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Response, type_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Response, name_),
  PROTOBUF_FIELD_OFFSET(::ptre::GetRemoteAddressV2Response, mr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::RecvRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::RecvRequest, dst_rank_),
  PROTOBUF_FIELD_OFFSET(::ptre::RecvRequest, len_),
  PROTOBUF_FIELD_OFFSET(::ptre::RecvRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::RecvResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::RecvResponse, buf_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetPermitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetPermitRequest, var_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::GetPermitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::GetPermitResponse, permit_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushVarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushVarRequest, var_name_),
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushVarRequest, src_rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushVarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::AttemptPushVarResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::CancelPushVarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ptre::CancelPushVarRequest, var_name_),
  PROTOBUF_FIELD_OFFSET(::ptre::CancelPushVarRequest, src_rank_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ptre::CancelPushVarResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ptre::MemoryRegion)},
  { 7, -1, sizeof(::ptre::GetLIDRequest)},
  { 12, -1, sizeof(::ptre::GetLIDResponse)},
  { 20, -1, sizeof(::ptre::GetQPAttrRequest)},
  { 26, -1, sizeof(::ptre::GetQPAttrResponse)},
  { 33, -1, sizeof(::ptre::GetRemoteAddressRequest)},
  { 40, -1, sizeof(::ptre::GetRemoteAddressResponse)},
  { 47, -1, sizeof(::ptre::GetRemoteEnvRequest)},
  { 53, -1, sizeof(::ptre::GetRemoteEnvResponse)},
  { 63, -1, sizeof(::ptre::GetRemoteParamAddressRequest)},
  { 69, -1, sizeof(::ptre::GetRemoteParamAddressResponse)},
  { 76, -1, sizeof(::ptre::AttemptPushRequest)},
  { 83, -1, sizeof(::ptre::AttemptPushResponse)},
  { 89, -1, sizeof(::ptre::NotifyPushDoneRequest)},
  { 96, -1, sizeof(::ptre::NotifyPushDoneResponse)},
  { 101, -1, sizeof(::ptre::BarrierRequest)},
  { 106, -1, sizeof(::ptre::BarrierResponse)},
  { 112, -1, sizeof(::ptre::GetRemoteAddressV2Request)},
  { 120, -1, sizeof(::ptre::GetRemoteAddressV2Response)},
  { 129, -1, sizeof(::ptre::RecvRequest)},
  { 137, -1, sizeof(::ptre::RecvResponse)},
  { 143, -1, sizeof(::ptre::GetPermitRequest)},
  { 149, -1, sizeof(::ptre::GetPermitResponse)},
  { 155, -1, sizeof(::ptre::AttemptPushVarRequest)},
  { 162, -1, sizeof(::ptre::AttemptPushVarResponse)},
  { 168, -1, sizeof(::ptre::CancelPushVarRequest)},
  { 175, -1, sizeof(::ptre::CancelPushVarResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_MemoryRegion_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetLIDRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetLIDResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetQPAttrRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetQPAttrResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteAddressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteAddressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteEnvRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteEnvResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteParamAddressRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteParamAddressResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_AttemptPushRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_AttemptPushResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_NotifyPushDoneRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_NotifyPushDoneResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_BarrierRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_BarrierResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteAddressV2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetRemoteAddressV2Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_RecvRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_RecvResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetPermitRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_GetPermitResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_AttemptPushVarRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_AttemptPushVarResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_CancelPushVarRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ptre::_CancelPushVarResponse_default_instance_),
};

const char descriptor_table_protodef_rdma_5fservice_2eproto[] =
  "\n\022rdma_service.proto\022\004ptre\"1\n\014MemoryRegi"
  "on\022\023\n\013remote_addr\030\001 \001(\004\022\014\n\004rkey\030\002 \001(\r\"\017\n"
  "\rGetLIDRequest\";\n\016GetLIDResponse\022\013\n\003lid\030"
  "\001 \001(\005\022\r\n\005gid_h\030\002 \001(\004\022\r\n\005gid_l\030\003 \001(\004\"$\n\020G"
  "etQPAttrRequest\022\020\n\010src_rank\030\001 \001(\005\"-\n\021Get"
  "QPAttrResponse\022\013\n\003qpn\030\001 \001(\r\022\013\n\003psn\030\002 \001(\r"
  "\"L\n\027GetRemoteAddressRequest\022\037\n\010buf_type\030"
  "\001 \001(\0162\r.ptre.BufType\022\020\n\010var_name\030\002 \001(\t\"="
  "\n\030GetRemoteAddressResponse\022\023\n\013remote_add"
  "r\030\001 \001(\004\022\014\n\004rkey\030\002 \001(\r\"#\n\023GetRemoteEnvReq"
  "uest\022\014\n\004rank\030\001 \001(\005\"X\n\024GetRemoteEnvRespon"
  "se\022\014\n\004rank\030\001 \001(\005\022\013\n\003lid\030\002 \001(\005\022\013\n\003qpn\030\003 \001"
  "(\005\022\013\n\003snp\030\004 \001(\004\022\013\n\003iid\030\005 \001(\004\",\n\034GetRemot"
  "eParamAddressRequest\022\014\n\004rank\030\001 \001(\005\"M\n\035Ge"
  "tRemoteParamAddressResponse\022\014\n\004rank\030\001 \001("
  "\005\022\036\n\002mr\030\003 \003(\0132\022.ptre.MemoryRegion\"1\n\022Att"
  "emptPushRequest\022\014\n\004rank\030\001 \001(\005\022\r\n\005vstep\030\002"
  " \001(\005\"(\n\023AttemptPushResponse\022\021\n\tavailable"
  "\030\001 \001(\010\";\n\025NotifyPushDoneRequest\022\020\n\010src_r"
  "ank\030\001 \001(\005\022\020\n\010var_name\030\002 \001(\t\"\030\n\026NotifyPus"
  "hDoneResponse\"\020\n\016BarrierRequest\"\"\n\017Barri"
  "erResponse\022\017\n\007entered\030\001 \001(\010\"T\n\031GetRemote"
  "AddressV2Request\022\014\n\004rank\030\001 \001(\005\022\033\n\004type\030\002"
  " \001(\0162\r.ptre.BufType\022\014\n\004name\030\003 \001(\t\"u\n\032Get"
  "RemoteAddressV2Response\022\014\n\004rank\030\001 \001(\005\022\033\n"
  "\004type\030\002 \001(\0162\r.ptre.BufType\022\014\n\004name\030\003 \001(\t"
  "\022\036\n\002mr\030\004 \003(\0132\022.ptre.MemoryRegion\":\n\013Recv"
  "Request\022\020\n\010dst_rank\030\001 \001(\005\022\013\n\003len\030\002 \001(\r\022\014"
  "\n\004name\030\003 \001(\t\"\033\n\014RecvResponse\022\013\n\003buf\030\001 \001("
  "\014\"$\n\020GetPermitRequest\022\020\n\010var_name\030\001 \001(\t\""
  "#\n\021GetPermitResponse\022\016\n\006permit\030\001 \001(\005\";\n\025"
  "AttemptPushVarRequest\022\020\n\010var_name\030\001 \001(\t\022"
  "\020\n\010src_rank\030\002 \001(\005\"(\n\026AttemptPushVarRespo"
  "nse\022\016\n\006result\030\001 \001(\010\":\n\024CancelPushVarRequ"
  "est\022\020\n\010var_name\030\001 \001(\t\022\020\n\010src_rank\030\002 \001(\005\""
  "\027\n\025CancelPushVarResponse*\357\002\n\007BufType\022\020\n\014"
  "BUF_TYPE_RAW\020\000\022\025\n\021BUF_TYPE_RECV_BUF\020\001\022\025\n"
  "\021BUF_TYPE_SEND_BUF\020\002\022\032\n\026BUF_TYPE_AGG_BUF"
  "_STATE\020\003\022\024\n\020BUF_TYPE_AGG_BUF\020\004\022\026\n\022BUF_TY"
  "PE_FLAG_RECV\020\005\022\026\n\022BUF_TYPE_FLAG_SEND\020\006\022\034"
  "\n\030BUF_TYPE_BARRIER_COUNTER\020\007\022\034\n\030BUF_TYPE"
  "_BARRIER_RELEASE\020\010\022\030\n\024BUF_TYPE_PUSH_PERM"
  "IT\020\t\022\035\n\031BUF_TYPE_PUSH_PERMIT_READ\020\n\022\025\n\021B"
  "UF_TYPE_PULL_KEY\020\013\022\032\n\026BUF_TYPE_PULL_TENS"
  "OR_A\020\014\022\032\n\026BUF_TYPE_PULL_TENSOR_B\020\r2\324\006\n\004R"
  "dma\0223\n\006GetLID\022\023.ptre.GetLIDRequest\032\024.ptr"
  "e.GetLIDResponse\022<\n\tGetQPAttr\022\026.ptre.Get"
  "QPAttrRequest\032\027.ptre.GetQPAttrResponse\022Q"
  "\n\020GetRemoteAddress\022\035.ptre.GetRemoteAddre"
  "ssRequest\032\036.ptre.GetRemoteAddressRespons"
  "e\022`\n\025GetRemoteParamAddress\022\".ptre.GetRem"
  "oteParamAddressRequest\032#.ptre.GetRemoteP"
  "aramAddressResponse\022B\n\013AttemptPush\022\030.ptr"
  "e.AttemptPushRequest\032\031.ptre.AttemptPushR"
  "esponse\022K\n\016AttemptPushVar\022\033.ptre.Attempt"
  "PushVarRequest\032\034.ptre.AttemptPushVarResp"
  "onse\022H\n\rCancelPushVar\022\032.ptre.CancelPushV"
  "arRequest\032\033.ptre.CancelPushVarResponse\022K"
  "\n\016NotifyPushDone\022\033.ptre.NotifyPushDoneRe"
  "quest\032\034.ptre.NotifyPushDoneResponse\0226\n\007B"
  "arrier\022\024.ptre.BarrierRequest\032\025.ptre.Barr"
  "ierResponse\022-\n\004Recv\022\021.ptre.RecvRequest\032\022"
  ".ptre.RecvResponse\022W\n\022GetRemoteAddressV2"
  "\022\037.ptre.GetRemoteAddressV2Request\032 .ptre"
  ".GetRemoteAddressV2Response\022<\n\tGetPermit"
  "\022\026.ptre.GetPermitRequest\032\027.ptre.GetPermi"
  "tResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_rdma_5fservice_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_rdma_5fservice_2eproto_sccs[27] = {
  &scc_info_AttemptPushRequest_rdma_5fservice_2eproto.base,
  &scc_info_AttemptPushResponse_rdma_5fservice_2eproto.base,
  &scc_info_AttemptPushVarRequest_rdma_5fservice_2eproto.base,
  &scc_info_AttemptPushVarResponse_rdma_5fservice_2eproto.base,
  &scc_info_BarrierRequest_rdma_5fservice_2eproto.base,
  &scc_info_BarrierResponse_rdma_5fservice_2eproto.base,
  &scc_info_CancelPushVarRequest_rdma_5fservice_2eproto.base,
  &scc_info_CancelPushVarResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetLIDRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetLIDResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetPermitRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetPermitResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetQPAttrRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetQPAttrResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteAddressResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteEnvRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteEnvResponse_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteParamAddressRequest_rdma_5fservice_2eproto.base,
  &scc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto.base,
  &scc_info_MemoryRegion_rdma_5fservice_2eproto.base,
  &scc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto.base,
  &scc_info_NotifyPushDoneResponse_rdma_5fservice_2eproto.base,
  &scc_info_RecvRequest_rdma_5fservice_2eproto.base,
  &scc_info_RecvResponse_rdma_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_rdma_5fservice_2eproto_once;
static bool descriptor_table_rdma_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rdma_5fservice_2eproto = {
  &descriptor_table_rdma_5fservice_2eproto_initialized, descriptor_table_protodef_rdma_5fservice_2eproto, "rdma_service.proto", 2657,
  &descriptor_table_rdma_5fservice_2eproto_once, descriptor_table_rdma_5fservice_2eproto_sccs, descriptor_table_rdma_5fservice_2eproto_deps, 27, 0,
  schemas, file_default_instances, TableStruct_rdma_5fservice_2eproto::offsets,
  file_level_metadata_rdma_5fservice_2eproto, 27, file_level_enum_descriptors_rdma_5fservice_2eproto, file_level_service_descriptors_rdma_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rdma_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_rdma_5fservice_2eproto), true);
namespace ptre {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BufType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_rdma_5fservice_2eproto);
  return file_level_enum_descriptors_rdma_5fservice_2eproto[0];
}
bool BufType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MemoryRegion::InitAsDefaultInstance() {
}
class MemoryRegion::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MemoryRegion::kRemoteAddrFieldNumber;
const int MemoryRegion::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MemoryRegion::MemoryRegion()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.MemoryRegion)
}
MemoryRegion::MemoryRegion(const MemoryRegion& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&remote_addr_, &from.remote_addr_,
    static_cast<size_t>(reinterpret_cast<char*>(&rkey_) -
    reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
  // @@protoc_insertion_point(copy_constructor:ptre.MemoryRegion)
}

void MemoryRegion::SharedCtor() {
  ::memset(&remote_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rkey_) -
      reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
}

MemoryRegion::~MemoryRegion() {
  // @@protoc_insertion_point(destructor:ptre.MemoryRegion)
  SharedDtor();
}

void MemoryRegion::SharedDtor() {
}

void MemoryRegion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MemoryRegion& MemoryRegion::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MemoryRegion_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void MemoryRegion::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.MemoryRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&remote_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rkey_) -
      reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MemoryRegion::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 remote_addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          remote_addr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rkey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MemoryRegion::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.MemoryRegion)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 remote_addr = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remote_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rkey = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.MemoryRegion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.MemoryRegion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MemoryRegion::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.MemoryRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->remote_addr(), output);
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->rkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.MemoryRegion)
}

::PROTOBUF_NAMESPACE_ID::uint8* MemoryRegion::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.MemoryRegion)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->remote_addr(), target);
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->rkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.MemoryRegion)
  return target;
}

size_t MemoryRegion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.MemoryRegion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->remote_addr());
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->rkey());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MemoryRegion::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.MemoryRegion)
  GOOGLE_DCHECK_NE(&from, this);
  const MemoryRegion* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MemoryRegion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.MemoryRegion)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.MemoryRegion)
    MergeFrom(*source);
  }
}

void MemoryRegion::MergeFrom(const MemoryRegion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.MemoryRegion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remote_addr() != 0) {
    set_remote_addr(from.remote_addr());
  }
  if (from.rkey() != 0) {
    set_rkey(from.rkey());
  }
}

void MemoryRegion::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.MemoryRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryRegion::CopyFrom(const MemoryRegion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.MemoryRegion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryRegion::IsInitialized() const {
  return true;
}

void MemoryRegion::Swap(MemoryRegion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryRegion::InternalSwap(MemoryRegion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(remote_addr_, other->remote_addr_);
  swap(rkey_, other->rkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MemoryRegion::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLIDRequest::InitAsDefaultInstance() {
}
class GetLIDRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLIDRequest::GetLIDRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetLIDRequest)
}
GetLIDRequest::GetLIDRequest(const GetLIDRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ptre.GetLIDRequest)
}

void GetLIDRequest::SharedCtor() {
}

GetLIDRequest::~GetLIDRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetLIDRequest)
  SharedDtor();
}

void GetLIDRequest::SharedDtor() {
}

void GetLIDRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLIDRequest& GetLIDRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLIDRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetLIDRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetLIDRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetLIDRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetLIDRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetLIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetLIDRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetLIDRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetLIDRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetLIDRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLIDRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetLIDRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetLIDRequest)
  return target;
}

size_t GetLIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetLIDRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLIDRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetLIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLIDRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLIDRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetLIDRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetLIDRequest)
    MergeFrom(*source);
  }
}

void GetLIDRequest::MergeFrom(const GetLIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetLIDRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetLIDRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetLIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLIDRequest::CopyFrom(const GetLIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetLIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLIDRequest::IsInitialized() const {
  return true;
}

void GetLIDRequest::Swap(GetLIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLIDRequest::InternalSwap(GetLIDRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLIDRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLIDResponse::InitAsDefaultInstance() {
}
class GetLIDResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLIDResponse::kLidFieldNumber;
const int GetLIDResponse::kGidHFieldNumber;
const int GetLIDResponse::kGidLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLIDResponse::GetLIDResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetLIDResponse)
}
GetLIDResponse::GetLIDResponse(const GetLIDResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gid_h_, &from.gid_h_,
    static_cast<size_t>(reinterpret_cast<char*>(&lid_) -
    reinterpret_cast<char*>(&gid_h_)) + sizeof(lid_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetLIDResponse)
}

void GetLIDResponse::SharedCtor() {
  ::memset(&gid_h_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lid_) -
      reinterpret_cast<char*>(&gid_h_)) + sizeof(lid_));
}

GetLIDResponse::~GetLIDResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetLIDResponse)
  SharedDtor();
}

void GetLIDResponse::SharedDtor() {
}

void GetLIDResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLIDResponse& GetLIDResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLIDResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetLIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetLIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gid_h_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lid_) -
      reinterpret_cast<char*>(&gid_h_)) + sizeof(lid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetLIDResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 lid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          lid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 gid_h = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          gid_h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 gid_l = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gid_l_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetLIDResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetLIDResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 lid = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &lid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gid_h = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gid_l = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gid_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetLIDResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetLIDResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetLIDResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetLIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 lid = 1;
  if (this->lid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->lid(), output);
  }

  // uint64 gid_h = 2;
  if (this->gid_h() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(2, this->gid_h(), output);
  }

  // uint64 gid_l = 3;
  if (this->gid_l() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(3, this->gid_l(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetLIDResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLIDResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetLIDResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 lid = 1;
  if (this->lid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->lid(), target);
  }

  // uint64 gid_h = 2;
  if (this->gid_h() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->gid_h(), target);
  }

  // uint64 gid_l = 3;
  if (this->gid_l() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->gid_l(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetLIDResponse)
  return target;
}

size_t GetLIDResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetLIDResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 gid_h = 2;
  if (this->gid_h() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->gid_h());
  }

  // uint64 gid_l = 3;
  if (this->gid_l() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->gid_l());
  }

  // int32 lid = 1;
  if (this->lid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->lid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLIDResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetLIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLIDResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLIDResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetLIDResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetLIDResponse)
    MergeFrom(*source);
  }
}

void GetLIDResponse::MergeFrom(const GetLIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetLIDResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gid_h() != 0) {
    set_gid_h(from.gid_h());
  }
  if (from.gid_l() != 0) {
    set_gid_l(from.gid_l());
  }
  if (from.lid() != 0) {
    set_lid(from.lid());
  }
}

void GetLIDResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetLIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLIDResponse::CopyFrom(const GetLIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetLIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLIDResponse::IsInitialized() const {
  return true;
}

void GetLIDResponse::Swap(GetLIDResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLIDResponse::InternalSwap(GetLIDResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(gid_h_, other->gid_h_);
  swap(gid_l_, other->gid_l_);
  swap(lid_, other->lid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLIDResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetQPAttrRequest::InitAsDefaultInstance() {
}
class GetQPAttrRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQPAttrRequest::kSrcRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQPAttrRequest::GetQPAttrRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetQPAttrRequest)
}
GetQPAttrRequest::GetQPAttrRequest(const GetQPAttrRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_rank_ = from.src_rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetQPAttrRequest)
}

void GetQPAttrRequest::SharedCtor() {
  src_rank_ = 0;
}

GetQPAttrRequest::~GetQPAttrRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetQPAttrRequest)
  SharedDtor();
}

void GetQPAttrRequest::SharedDtor() {
}

void GetQPAttrRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetQPAttrRequest& GetQPAttrRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetQPAttrRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetQPAttrRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetQPAttrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetQPAttrRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 src_rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          src_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetQPAttrRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetQPAttrRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 src_rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetQPAttrRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetQPAttrRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetQPAttrRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetQPAttrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->src_rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetQPAttrRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetQPAttrRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetQPAttrRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->src_rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetQPAttrRequest)
  return target;
}

size_t GetQPAttrRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetQPAttrRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->src_rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetQPAttrRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetQPAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQPAttrRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetQPAttrRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetQPAttrRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetQPAttrRequest)
    MergeFrom(*source);
  }
}

void GetQPAttrRequest::MergeFrom(const GetQPAttrRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetQPAttrRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src_rank() != 0) {
    set_src_rank(from.src_rank());
  }
}

void GetQPAttrRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetQPAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQPAttrRequest::CopyFrom(const GetQPAttrRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetQPAttrRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQPAttrRequest::IsInitialized() const {
  return true;
}

void GetQPAttrRequest::Swap(GetQPAttrRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQPAttrRequest::InternalSwap(GetQPAttrRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(src_rank_, other->src_rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQPAttrRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetQPAttrResponse::InitAsDefaultInstance() {
}
class GetQPAttrResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetQPAttrResponse::kQpnFieldNumber;
const int GetQPAttrResponse::kPsnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetQPAttrResponse::GetQPAttrResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetQPAttrResponse)
}
GetQPAttrResponse::GetQPAttrResponse(const GetQPAttrResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&qpn_, &from.qpn_,
    static_cast<size_t>(reinterpret_cast<char*>(&psn_) -
    reinterpret_cast<char*>(&qpn_)) + sizeof(psn_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetQPAttrResponse)
}

void GetQPAttrResponse::SharedCtor() {
  ::memset(&qpn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&psn_) -
      reinterpret_cast<char*>(&qpn_)) + sizeof(psn_));
}

GetQPAttrResponse::~GetQPAttrResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetQPAttrResponse)
  SharedDtor();
}

void GetQPAttrResponse::SharedDtor() {
}

void GetQPAttrResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetQPAttrResponse& GetQPAttrResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetQPAttrResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetQPAttrResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetQPAttrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&qpn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&psn_) -
      reinterpret_cast<char*>(&qpn_)) + sizeof(psn_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetQPAttrResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 qpn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          qpn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 psn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          psn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetQPAttrResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetQPAttrResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 qpn = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qpn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 psn = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &psn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetQPAttrResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetQPAttrResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetQPAttrResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetQPAttrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 qpn = 1;
  if (this->qpn() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(1, this->qpn(), output);
  }

  // uint32 psn = 2;
  if (this->psn() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->psn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetQPAttrResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetQPAttrResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetQPAttrResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 qpn = 1;
  if (this->qpn() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->qpn(), target);
  }

  // uint32 psn = 2;
  if (this->psn() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->psn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetQPAttrResponse)
  return target;
}

size_t GetQPAttrResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetQPAttrResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 qpn = 1;
  if (this->qpn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->qpn());
  }

  // uint32 psn = 2;
  if (this->psn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->psn());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetQPAttrResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetQPAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetQPAttrResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetQPAttrResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetQPAttrResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetQPAttrResponse)
    MergeFrom(*source);
  }
}

void GetQPAttrResponse::MergeFrom(const GetQPAttrResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetQPAttrResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.qpn() != 0) {
    set_qpn(from.qpn());
  }
  if (from.psn() != 0) {
    set_psn(from.psn());
  }
}

void GetQPAttrResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetQPAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetQPAttrResponse::CopyFrom(const GetQPAttrResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetQPAttrResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetQPAttrResponse::IsInitialized() const {
  return true;
}

void GetQPAttrResponse::Swap(GetQPAttrResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetQPAttrResponse::InternalSwap(GetQPAttrResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(qpn_, other->qpn_);
  swap(psn_, other->psn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetQPAttrResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteAddressRequest::InitAsDefaultInstance() {
}
class GetRemoteAddressRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteAddressRequest::kBufTypeFieldNumber;
const int GetRemoteAddressRequest::kVarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteAddressRequest::GetRemoteAddressRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteAddressRequest)
}
GetRemoteAddressRequest::GetRemoteAddressRequest(const GetRemoteAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.var_name().size() > 0) {
    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  buf_type_ = from.buf_type_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteAddressRequest)
}

void GetRemoteAddressRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto.base);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buf_type_ = 0;
}

GetRemoteAddressRequest::~GetRemoteAddressRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteAddressRequest)
  SharedDtor();
}

void GetRemoteAddressRequest::SharedDtor() {
  var_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRemoteAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteAddressRequest& GetRemoteAddressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteAddressRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  buf_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteAddressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ptre.BufType buf_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_buf_type(static_cast<::ptre::BufType>(val));
        } else goto handle_unusual;
        continue;
      // string var_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_var_name(), ptr, ctx, "ptre.GetRemoteAddressRequest.var_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteAddressRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteAddressRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ptre.BufType buf_type = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_buf_type(static_cast< ::ptre::BufType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string var_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.GetRemoteAddressRequest.var_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteAddressRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteAddressRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ptre.BufType buf_type = 1;
  if (this->buf_type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->buf_type(), output);
  }

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressRequest.var_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->var_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteAddressRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteAddressRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ptre.BufType buf_type = 1;
  if (this->buf_type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->buf_type(), target);
  }

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressRequest.var_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->var_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteAddressRequest)
  return target;
}

size_t GetRemoteAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteAddressRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->var_name());
  }

  // .ptre.BufType buf_type = 1;
  if (this->buf_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->buf_type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteAddressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteAddressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteAddressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteAddressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteAddressRequest)
    MergeFrom(*source);
  }
}

void GetRemoteAddressRequest::MergeFrom(const GetRemoteAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var_name().size() > 0) {

    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  if (from.buf_type() != 0) {
    set_buf_type(from.buf_type());
  }
}

void GetRemoteAddressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteAddressRequest::CopyFrom(const GetRemoteAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteAddressRequest::IsInitialized() const {
  return true;
}

void GetRemoteAddressRequest::Swap(GetRemoteAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteAddressRequest::InternalSwap(GetRemoteAddressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  var_name_.Swap(&other->var_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(buf_type_, other->buf_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteAddressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteAddressResponse::InitAsDefaultInstance() {
}
class GetRemoteAddressResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteAddressResponse::kRemoteAddrFieldNumber;
const int GetRemoteAddressResponse::kRkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteAddressResponse::GetRemoteAddressResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteAddressResponse)
}
GetRemoteAddressResponse::GetRemoteAddressResponse(const GetRemoteAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&remote_addr_, &from.remote_addr_,
    static_cast<size_t>(reinterpret_cast<char*>(&rkey_) -
    reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteAddressResponse)
}

void GetRemoteAddressResponse::SharedCtor() {
  ::memset(&remote_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rkey_) -
      reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
}

GetRemoteAddressResponse::~GetRemoteAddressResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteAddressResponse)
  SharedDtor();
}

void GetRemoteAddressResponse::SharedDtor() {
}

void GetRemoteAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteAddressResponse& GetRemoteAddressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteAddressResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&remote_addr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rkey_) -
      reinterpret_cast<char*>(&remote_addr_)) + sizeof(rkey_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteAddressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 remote_addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          remote_addr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 rkey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          rkey_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteAddressResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteAddressResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 remote_addr = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remote_addr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rkey = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteAddressResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteAddressResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(1, this->remote_addr(), output);
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->rkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteAddressResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteAddressResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->remote_addr(), target);
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->rkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteAddressResponse)
  return target;
}

size_t GetRemoteAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteAddressResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 remote_addr = 1;
  if (this->remote_addr() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->remote_addr());
  }

  // uint32 rkey = 2;
  if (this->rkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->rkey());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteAddressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteAddressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteAddressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteAddressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteAddressResponse)
    MergeFrom(*source);
  }
}

void GetRemoteAddressResponse::MergeFrom(const GetRemoteAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.remote_addr() != 0) {
    set_remote_addr(from.remote_addr());
  }
  if (from.rkey() != 0) {
    set_rkey(from.rkey());
  }
}

void GetRemoteAddressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteAddressResponse::CopyFrom(const GetRemoteAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteAddressResponse::IsInitialized() const {
  return true;
}

void GetRemoteAddressResponse::Swap(GetRemoteAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteAddressResponse::InternalSwap(GetRemoteAddressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(remote_addr_, other->remote_addr_);
  swap(rkey_, other->rkey_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteAddressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteEnvRequest::InitAsDefaultInstance() {
}
class GetRemoteEnvRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteEnvRequest::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteEnvRequest::GetRemoteEnvRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteEnvRequest)
}
GetRemoteEnvRequest::GetRemoteEnvRequest(const GetRemoteEnvRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteEnvRequest)
}

void GetRemoteEnvRequest::SharedCtor() {
  rank_ = 0;
}

GetRemoteEnvRequest::~GetRemoteEnvRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteEnvRequest)
  SharedDtor();
}

void GetRemoteEnvRequest::SharedDtor() {
}

void GetRemoteEnvRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteEnvRequest& GetRemoteEnvRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteEnvRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteEnvRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteEnvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteEnvRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteEnvRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteEnvRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteEnvRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteEnvRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteEnvRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteEnvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteEnvRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteEnvRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteEnvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteEnvRequest)
  return target;
}

size_t GetRemoteEnvRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteEnvRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteEnvRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteEnvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteEnvRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteEnvRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteEnvRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteEnvRequest)
    MergeFrom(*source);
  }
}

void GetRemoteEnvRequest::MergeFrom(const GetRemoteEnvRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteEnvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void GetRemoteEnvRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteEnvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteEnvRequest::CopyFrom(const GetRemoteEnvRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteEnvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteEnvRequest::IsInitialized() const {
  return true;
}

void GetRemoteEnvRequest::Swap(GetRemoteEnvRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteEnvRequest::InternalSwap(GetRemoteEnvRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rank_, other->rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteEnvRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteEnvResponse::InitAsDefaultInstance() {
}
class GetRemoteEnvResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteEnvResponse::kRankFieldNumber;
const int GetRemoteEnvResponse::kLidFieldNumber;
const int GetRemoteEnvResponse::kQpnFieldNumber;
const int GetRemoteEnvResponse::kSnpFieldNumber;
const int GetRemoteEnvResponse::kIidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteEnvResponse::GetRemoteEnvResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteEnvResponse)
}
GetRemoteEnvResponse::GetRemoteEnvResponse(const GetRemoteEnvResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&qpn_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(qpn_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteEnvResponse)
}

void GetRemoteEnvResponse::SharedCtor() {
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qpn_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(qpn_));
}

GetRemoteEnvResponse::~GetRemoteEnvResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteEnvResponse)
  SharedDtor();
}

void GetRemoteEnvResponse::SharedDtor() {
}

void GetRemoteEnvResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteEnvResponse& GetRemoteEnvResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteEnvResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteEnvResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteEnvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qpn_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(qpn_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteEnvResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 lid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          lid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 qpn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          qpn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 snp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          snp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 iid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          iid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteEnvResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteEnvResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 lid = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &lid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qpn = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &qpn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 snp = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &snp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 iid = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT64>(
                 input, &iid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteEnvResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteEnvResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteEnvResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteEnvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // int32 lid = 2;
  if (this->lid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->lid(), output);
  }

  // int32 qpn = 3;
  if (this->qpn() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->qpn(), output);
  }

  // uint64 snp = 4;
  if (this->snp() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(4, this->snp(), output);
  }

  // uint64 iid = 5;
  if (this->iid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64(5, this->iid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteEnvResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteEnvResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteEnvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // int32 lid = 2;
  if (this->lid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->lid(), target);
  }

  // int32 qpn = 3;
  if (this->qpn() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->qpn(), target);
  }

  // uint64 snp = 4;
  if (this->snp() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->snp(), target);
  }

  // uint64 iid = 5;
  if (this->iid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->iid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteEnvResponse)
  return target;
}

size_t GetRemoteEnvResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteEnvResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // int32 lid = 2;
  if (this->lid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->lid());
  }

  // uint64 snp = 4;
  if (this->snp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->snp());
  }

  // uint64 iid = 5;
  if (this->iid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->iid());
  }

  // int32 qpn = 3;
  if (this->qpn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->qpn());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteEnvResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteEnvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteEnvResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteEnvResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteEnvResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteEnvResponse)
    MergeFrom(*source);
  }
}

void GetRemoteEnvResponse::MergeFrom(const GetRemoteEnvResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteEnvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.lid() != 0) {
    set_lid(from.lid());
  }
  if (from.snp() != 0) {
    set_snp(from.snp());
  }
  if (from.iid() != 0) {
    set_iid(from.iid());
  }
  if (from.qpn() != 0) {
    set_qpn(from.qpn());
  }
}

void GetRemoteEnvResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteEnvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteEnvResponse::CopyFrom(const GetRemoteEnvResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteEnvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteEnvResponse::IsInitialized() const {
  return true;
}

void GetRemoteEnvResponse::Swap(GetRemoteEnvResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteEnvResponse::InternalSwap(GetRemoteEnvResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rank_, other->rank_);
  swap(lid_, other->lid_);
  swap(snp_, other->snp_);
  swap(iid_, other->iid_);
  swap(qpn_, other->qpn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteEnvResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteParamAddressRequest::InitAsDefaultInstance() {
}
class GetRemoteParamAddressRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteParamAddressRequest::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteParamAddressRequest::GetRemoteParamAddressRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteParamAddressRequest)
}
GetRemoteParamAddressRequest::GetRemoteParamAddressRequest(const GetRemoteParamAddressRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteParamAddressRequest)
}

void GetRemoteParamAddressRequest::SharedCtor() {
  rank_ = 0;
}

GetRemoteParamAddressRequest::~GetRemoteParamAddressRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteParamAddressRequest)
  SharedDtor();
}

void GetRemoteParamAddressRequest::SharedDtor() {
}

void GetRemoteParamAddressRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteParamAddressRequest& GetRemoteParamAddressRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteParamAddressRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteParamAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteParamAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteParamAddressRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteParamAddressRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteParamAddressRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteParamAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteParamAddressRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteParamAddressRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteParamAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteParamAddressRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteParamAddressRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteParamAddressRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteParamAddressRequest)
  return target;
}

size_t GetRemoteParamAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteParamAddressRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteParamAddressRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteParamAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteParamAddressRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteParamAddressRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteParamAddressRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteParamAddressRequest)
    MergeFrom(*source);
  }
}

void GetRemoteParamAddressRequest::MergeFrom(const GetRemoteParamAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteParamAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void GetRemoteParamAddressRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteParamAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteParamAddressRequest::CopyFrom(const GetRemoteParamAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteParamAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteParamAddressRequest::IsInitialized() const {
  return true;
}

void GetRemoteParamAddressRequest::Swap(GetRemoteParamAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteParamAddressRequest::InternalSwap(GetRemoteParamAddressRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rank_, other->rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteParamAddressRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteParamAddressResponse::InitAsDefaultInstance() {
}
class GetRemoteParamAddressResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteParamAddressResponse::kRankFieldNumber;
const int GetRemoteParamAddressResponse::kMrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteParamAddressResponse::GetRemoteParamAddressResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteParamAddressResponse)
}
GetRemoteParamAddressResponse::GetRemoteParamAddressResponse(const GetRemoteParamAddressResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      mr_(from.mr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteParamAddressResponse)
}

void GetRemoteParamAddressResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto.base);
  rank_ = 0;
}

GetRemoteParamAddressResponse::~GetRemoteParamAddressResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteParamAddressResponse)
  SharedDtor();
}

void GetRemoteParamAddressResponse::SharedDtor() {
}

void GetRemoteParamAddressResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteParamAddressResponse& GetRemoteParamAddressResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteParamAddressResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteParamAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteParamAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mr_.Clear();
  rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteParamAddressResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ptre.MemoryRegion mr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_mr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteParamAddressResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteParamAddressResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ptre.MemoryRegion mr = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_mr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteParamAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteParamAddressResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteParamAddressResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteParamAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // repeated .ptre.MemoryRegion mr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mr_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->mr(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteParamAddressResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteParamAddressResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteParamAddressResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // repeated .ptre.MemoryRegion mr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mr_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mr(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteParamAddressResponse)
  return target;
}

size_t GetRemoteParamAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteParamAddressResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ptre.MemoryRegion mr = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->mr(static_cast<int>(i)));
    }
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteParamAddressResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteParamAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteParamAddressResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteParamAddressResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteParamAddressResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteParamAddressResponse)
    MergeFrom(*source);
  }
}

void GetRemoteParamAddressResponse::MergeFrom(const GetRemoteParamAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteParamAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mr_.MergeFrom(from.mr_);
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void GetRemoteParamAddressResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteParamAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteParamAddressResponse::CopyFrom(const GetRemoteParamAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteParamAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteParamAddressResponse::IsInitialized() const {
  return true;
}

void GetRemoteParamAddressResponse::Swap(GetRemoteParamAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteParamAddressResponse::InternalSwap(GetRemoteParamAddressResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&mr_)->InternalSwap(CastToBase(&other->mr_));
  swap(rank_, other->rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteParamAddressResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AttemptPushRequest::InitAsDefaultInstance() {
}
class AttemptPushRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttemptPushRequest::kRankFieldNumber;
const int AttemptPushRequest::kVstepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttemptPushRequest::AttemptPushRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.AttemptPushRequest)
}
AttemptPushRequest::AttemptPushRequest(const AttemptPushRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&vstep_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(vstep_));
  // @@protoc_insertion_point(copy_constructor:ptre.AttemptPushRequest)
}

void AttemptPushRequest::SharedCtor() {
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vstep_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(vstep_));
}

AttemptPushRequest::~AttemptPushRequest() {
  // @@protoc_insertion_point(destructor:ptre.AttemptPushRequest)
  SharedDtor();
}

void AttemptPushRequest::SharedDtor() {
}

void AttemptPushRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AttemptPushRequest& AttemptPushRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AttemptPushRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AttemptPushRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.AttemptPushRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vstep_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(vstep_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AttemptPushRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vstep = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          vstep_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AttemptPushRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.AttemptPushRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vstep = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &vstep_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.AttemptPushRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.AttemptPushRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AttemptPushRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.AttemptPushRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // int32 vstep = 2;
  if (this->vstep() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->vstep(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.AttemptPushRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* AttemptPushRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.AttemptPushRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // int32 vstep = 2;
  if (this->vstep() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->vstep(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.AttemptPushRequest)
  return target;
}

size_t AttemptPushRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.AttemptPushRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // int32 vstep = 2;
  if (this->vstep() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->vstep());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttemptPushRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.AttemptPushRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AttemptPushRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttemptPushRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.AttemptPushRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.AttemptPushRequest)
    MergeFrom(*source);
  }
}

void AttemptPushRequest::MergeFrom(const AttemptPushRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.AttemptPushRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.vstep() != 0) {
    set_vstep(from.vstep());
  }
}

void AttemptPushRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.AttemptPushRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttemptPushRequest::CopyFrom(const AttemptPushRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.AttemptPushRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttemptPushRequest::IsInitialized() const {
  return true;
}

void AttemptPushRequest::Swap(AttemptPushRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttemptPushRequest::InternalSwap(AttemptPushRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rank_, other->rank_);
  swap(vstep_, other->vstep_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttemptPushRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AttemptPushResponse::InitAsDefaultInstance() {
}
class AttemptPushResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttemptPushResponse::kAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttemptPushResponse::AttemptPushResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.AttemptPushResponse)
}
AttemptPushResponse::AttemptPushResponse(const AttemptPushResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  available_ = from.available_;
  // @@protoc_insertion_point(copy_constructor:ptre.AttemptPushResponse)
}

void AttemptPushResponse::SharedCtor() {
  available_ = false;
}

AttemptPushResponse::~AttemptPushResponse() {
  // @@protoc_insertion_point(destructor:ptre.AttemptPushResponse)
  SharedDtor();
}

void AttemptPushResponse::SharedDtor() {
}

void AttemptPushResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AttemptPushResponse& AttemptPushResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AttemptPushResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AttemptPushResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.AttemptPushResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AttemptPushResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool available = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          available_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AttemptPushResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.AttemptPushResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool available = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.AttemptPushResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.AttemptPushResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AttemptPushResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.AttemptPushResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool available = 1;
  if (this->available() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.AttemptPushResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* AttemptPushResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.AttemptPushResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool available = 1;
  if (this->available() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.AttemptPushResponse)
  return target;
}

size_t AttemptPushResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.AttemptPushResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool available = 1;
  if (this->available() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttemptPushResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.AttemptPushResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AttemptPushResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttemptPushResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.AttemptPushResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.AttemptPushResponse)
    MergeFrom(*source);
  }
}

void AttemptPushResponse::MergeFrom(const AttemptPushResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.AttemptPushResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.available() != 0) {
    set_available(from.available());
  }
}

void AttemptPushResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.AttemptPushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttemptPushResponse::CopyFrom(const AttemptPushResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.AttemptPushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttemptPushResponse::IsInitialized() const {
  return true;
}

void AttemptPushResponse::Swap(AttemptPushResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttemptPushResponse::InternalSwap(AttemptPushResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(available_, other->available_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttemptPushResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NotifyPushDoneRequest::InitAsDefaultInstance() {
}
class NotifyPushDoneRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotifyPushDoneRequest::kSrcRankFieldNumber;
const int NotifyPushDoneRequest::kVarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyPushDoneRequest::NotifyPushDoneRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.NotifyPushDoneRequest)
}
NotifyPushDoneRequest::NotifyPushDoneRequest(const NotifyPushDoneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.var_name().size() > 0) {
    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  src_rank_ = from.src_rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.NotifyPushDoneRequest)
}

void NotifyPushDoneRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto.base);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
}

NotifyPushDoneRequest::~NotifyPushDoneRequest() {
  // @@protoc_insertion_point(destructor:ptre.NotifyPushDoneRequest)
  SharedDtor();
}

void NotifyPushDoneRequest::SharedDtor() {
  var_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NotifyPushDoneRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotifyPushDoneRequest& NotifyPushDoneRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotifyPushDoneRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NotifyPushDoneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.NotifyPushDoneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotifyPushDoneRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 src_rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          src_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string var_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_var_name(), ptr, ctx, "ptre.NotifyPushDoneRequest.var_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotifyPushDoneRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.NotifyPushDoneRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 src_rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string var_name = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.NotifyPushDoneRequest.var_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.NotifyPushDoneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.NotifyPushDoneRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotifyPushDoneRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.NotifyPushDoneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->src_rank(), output);
  }

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.NotifyPushDoneRequest.var_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->var_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.NotifyPushDoneRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotifyPushDoneRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.NotifyPushDoneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->src_rank(), target);
  }

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.NotifyPushDoneRequest.var_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->var_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.NotifyPushDoneRequest)
  return target;
}

size_t NotifyPushDoneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.NotifyPushDoneRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 2;
  if (this->var_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->var_name());
  }

  // int32 src_rank = 1;
  if (this->src_rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->src_rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyPushDoneRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.NotifyPushDoneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyPushDoneRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotifyPushDoneRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.NotifyPushDoneRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.NotifyPushDoneRequest)
    MergeFrom(*source);
  }
}

void NotifyPushDoneRequest::MergeFrom(const NotifyPushDoneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.NotifyPushDoneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var_name().size() > 0) {

    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  if (from.src_rank() != 0) {
    set_src_rank(from.src_rank());
  }
}

void NotifyPushDoneRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.NotifyPushDoneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPushDoneRequest::CopyFrom(const NotifyPushDoneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.NotifyPushDoneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPushDoneRequest::IsInitialized() const {
  return true;
}

void NotifyPushDoneRequest::Swap(NotifyPushDoneRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyPushDoneRequest::InternalSwap(NotifyPushDoneRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  var_name_.Swap(&other->var_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_rank_, other->src_rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyPushDoneRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NotifyPushDoneResponse::InitAsDefaultInstance() {
}
class NotifyPushDoneResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotifyPushDoneResponse::NotifyPushDoneResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.NotifyPushDoneResponse)
}
NotifyPushDoneResponse::NotifyPushDoneResponse(const NotifyPushDoneResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ptre.NotifyPushDoneResponse)
}

void NotifyPushDoneResponse::SharedCtor() {
}

NotifyPushDoneResponse::~NotifyPushDoneResponse() {
  // @@protoc_insertion_point(destructor:ptre.NotifyPushDoneResponse)
  SharedDtor();
}

void NotifyPushDoneResponse::SharedDtor() {
}

void NotifyPushDoneResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotifyPushDoneResponse& NotifyPushDoneResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotifyPushDoneResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void NotifyPushDoneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.NotifyPushDoneResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* NotifyPushDoneResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool NotifyPushDoneResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.NotifyPushDoneResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.NotifyPushDoneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.NotifyPushDoneResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void NotifyPushDoneResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.NotifyPushDoneResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.NotifyPushDoneResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* NotifyPushDoneResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.NotifyPushDoneResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.NotifyPushDoneResponse)
  return target;
}

size_t NotifyPushDoneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.NotifyPushDoneResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotifyPushDoneResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.NotifyPushDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const NotifyPushDoneResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotifyPushDoneResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.NotifyPushDoneResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.NotifyPushDoneResponse)
    MergeFrom(*source);
  }
}

void NotifyPushDoneResponse::MergeFrom(const NotifyPushDoneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.NotifyPushDoneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NotifyPushDoneResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.NotifyPushDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotifyPushDoneResponse::CopyFrom(const NotifyPushDoneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.NotifyPushDoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotifyPushDoneResponse::IsInitialized() const {
  return true;
}

void NotifyPushDoneResponse::Swap(NotifyPushDoneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotifyPushDoneResponse::InternalSwap(NotifyPushDoneResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NotifyPushDoneResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BarrierRequest::InitAsDefaultInstance() {
}
class BarrierRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarrierRequest::BarrierRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.BarrierRequest)
}
BarrierRequest::BarrierRequest(const BarrierRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ptre.BarrierRequest)
}

void BarrierRequest::SharedCtor() {
}

BarrierRequest::~BarrierRequest() {
  // @@protoc_insertion_point(destructor:ptre.BarrierRequest)
  SharedDtor();
}

void BarrierRequest::SharedDtor() {
}

void BarrierRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BarrierRequest& BarrierRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BarrierRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void BarrierRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.BarrierRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BarrierRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BarrierRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.BarrierRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.BarrierRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.BarrierRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BarrierRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.BarrierRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.BarrierRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* BarrierRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.BarrierRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.BarrierRequest)
  return target;
}

size_t BarrierRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.BarrierRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BarrierRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.BarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BarrierRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BarrierRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.BarrierRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.BarrierRequest)
    MergeFrom(*source);
  }
}

void BarrierRequest::MergeFrom(const BarrierRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.BarrierRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BarrierRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.BarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarrierRequest::CopyFrom(const BarrierRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.BarrierRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarrierRequest::IsInitialized() const {
  return true;
}

void BarrierRequest::Swap(BarrierRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BarrierRequest::InternalSwap(BarrierRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BarrierRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BarrierResponse::InitAsDefaultInstance() {
}
class BarrierResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BarrierResponse::kEnteredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BarrierResponse::BarrierResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.BarrierResponse)
}
BarrierResponse::BarrierResponse(const BarrierResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entered_ = from.entered_;
  // @@protoc_insertion_point(copy_constructor:ptre.BarrierResponse)
}

void BarrierResponse::SharedCtor() {
  entered_ = false;
}

BarrierResponse::~BarrierResponse() {
  // @@protoc_insertion_point(destructor:ptre.BarrierResponse)
  SharedDtor();
}

void BarrierResponse::SharedDtor() {
}

void BarrierResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BarrierResponse& BarrierResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BarrierResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void BarrierResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.BarrierResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entered_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BarrierResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool entered = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entered_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BarrierResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.BarrierResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool entered = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &entered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.BarrierResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.BarrierResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BarrierResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.BarrierResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool entered = 1;
  if (this->entered() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->entered(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.BarrierResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* BarrierResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.BarrierResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool entered = 1;
  if (this->entered() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->entered(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.BarrierResponse)
  return target;
}

size_t BarrierResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.BarrierResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool entered = 1;
  if (this->entered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BarrierResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.BarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BarrierResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BarrierResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.BarrierResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.BarrierResponse)
    MergeFrom(*source);
  }
}

void BarrierResponse::MergeFrom(const BarrierResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.BarrierResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entered() != 0) {
    set_entered(from.entered());
  }
}

void BarrierResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.BarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BarrierResponse::CopyFrom(const BarrierResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.BarrierResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarrierResponse::IsInitialized() const {
  return true;
}

void BarrierResponse::Swap(BarrierResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BarrierResponse::InternalSwap(BarrierResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(entered_, other->entered_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BarrierResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteAddressV2Request::InitAsDefaultInstance() {
}
class GetRemoteAddressV2Request::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteAddressV2Request::kRankFieldNumber;
const int GetRemoteAddressV2Request::kTypeFieldNumber;
const int GetRemoteAddressV2Request::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteAddressV2Request::GetRemoteAddressV2Request()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteAddressV2Request)
}
GetRemoteAddressV2Request::GetRemoteAddressV2Request(const GetRemoteAddressV2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteAddressV2Request)
}

void GetRemoteAddressV2Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(type_));
}

GetRemoteAddressV2Request::~GetRemoteAddressV2Request() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteAddressV2Request)
  SharedDtor();
}

void GetRemoteAddressV2Request::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRemoteAddressV2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteAddressV2Request& GetRemoteAddressV2Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteAddressV2Request_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteAddressV2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteAddressV2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteAddressV2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ptre.BufType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::ptre::BufType>(val));
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "ptre.GetRemoteAddressV2Request.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteAddressV2Request::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteAddressV2Request)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ptre.BufType type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ptre::BufType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.GetRemoteAddressV2Request.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteAddressV2Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteAddressV2Request)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteAddressV2Request::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteAddressV2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressV2Request.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteAddressV2Request)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteAddressV2Request::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteAddressV2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressV2Request.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteAddressV2Request)
  return target;
}

size_t GetRemoteAddressV2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteAddressV2Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteAddressV2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteAddressV2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteAddressV2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteAddressV2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteAddressV2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteAddressV2Request)
    MergeFrom(*source);
  }
}

void GetRemoteAddressV2Request::MergeFrom(const GetRemoteAddressV2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteAddressV2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetRemoteAddressV2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteAddressV2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteAddressV2Request::CopyFrom(const GetRemoteAddressV2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteAddressV2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteAddressV2Request::IsInitialized() const {
  return true;
}

void GetRemoteAddressV2Request::Swap(GetRemoteAddressV2Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteAddressV2Request::InternalSwap(GetRemoteAddressV2Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rank_, other->rank_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteAddressV2Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRemoteAddressV2Response::InitAsDefaultInstance() {
}
class GetRemoteAddressV2Response::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRemoteAddressV2Response::kRankFieldNumber;
const int GetRemoteAddressV2Response::kTypeFieldNumber;
const int GetRemoteAddressV2Response::kNameFieldNumber;
const int GetRemoteAddressV2Response::kMrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRemoteAddressV2Response::GetRemoteAddressV2Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetRemoteAddressV2Response)
}
GetRemoteAddressV2Response::GetRemoteAddressV2Response(const GetRemoteAddressV2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      mr_(from.mr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&rank_, &from.rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rank_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ptre.GetRemoteAddressV2Response)
}

void GetRemoteAddressV2Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(type_));
}

GetRemoteAddressV2Response::~GetRemoteAddressV2Response() {
  // @@protoc_insertion_point(destructor:ptre.GetRemoteAddressV2Response)
  SharedDtor();
}

void GetRemoteAddressV2Response::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRemoteAddressV2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRemoteAddressV2Response& GetRemoteAddressV2Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRemoteAddressV2Response_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetRemoteAddressV2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetRemoteAddressV2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mr_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&rank_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetRemoteAddressV2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ptre.BufType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_type(static_cast<::ptre::BufType>(val));
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "ptre.GetRemoteAddressV2Response.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ptre.MemoryRegion mr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_mr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetRemoteAddressV2Response::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetRemoteAddressV2Response)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ptre.BufType type = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ptre::BufType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.GetRemoteAddressV2Response.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ptre.MemoryRegion mr = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_mr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetRemoteAddressV2Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetRemoteAddressV2Response)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetRemoteAddressV2Response::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetRemoteAddressV2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressV2Response.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .ptre.MemoryRegion mr = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mr_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->mr(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetRemoteAddressV2Response)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRemoteAddressV2Response::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetRemoteAddressV2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rank = 1;
  if (this->rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetRemoteAddressV2Response.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .ptre.MemoryRegion mr = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mr_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->mr(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetRemoteAddressV2Response)
  return target;
}

size_t GetRemoteAddressV2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetRemoteAddressV2Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ptre.MemoryRegion mr = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->mr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->mr(static_cast<int>(i)));
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->rank());
  }

  // .ptre.BufType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRemoteAddressV2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetRemoteAddressV2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRemoteAddressV2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRemoteAddressV2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetRemoteAddressV2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetRemoteAddressV2Response)
    MergeFrom(*source);
  }
}

void GetRemoteAddressV2Response::MergeFrom(const GetRemoteAddressV2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetRemoteAddressV2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mr_.MergeFrom(from.mr_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void GetRemoteAddressV2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetRemoteAddressV2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRemoteAddressV2Response::CopyFrom(const GetRemoteAddressV2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetRemoteAddressV2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRemoteAddressV2Response::IsInitialized() const {
  return true;
}

void GetRemoteAddressV2Response::Swap(GetRemoteAddressV2Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRemoteAddressV2Response::InternalSwap(GetRemoteAddressV2Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&mr_)->InternalSwap(CastToBase(&other->mr_));
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rank_, other->rank_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRemoteAddressV2Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecvRequest::InitAsDefaultInstance() {
}
class RecvRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvRequest::kDstRankFieldNumber;
const int RecvRequest::kLenFieldNumber;
const int RecvRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvRequest::RecvRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.RecvRequest)
}
RecvRequest::RecvRequest(const RecvRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&dst_rank_, &from.dst_rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&dst_rank_)) + sizeof(len_));
  // @@protoc_insertion_point(copy_constructor:ptre.RecvRequest)
}

void RecvRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecvRequest_rdma_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&dst_rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&dst_rank_)) + sizeof(len_));
}

RecvRequest::~RecvRequest() {
  // @@protoc_insertion_point(destructor:ptre.RecvRequest)
  SharedDtor();
}

void RecvRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecvRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecvRequest& RecvRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecvRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecvRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.RecvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&dst_rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&len_) -
      reinterpret_cast<char*>(&dst_rank_)) + sizeof(len_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecvRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 dst_rank = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          dst_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 len = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "ptre.RecvRequest.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecvRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.RecvRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 dst_rank = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &dst_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 len = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.RecvRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.RecvRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.RecvRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecvRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.RecvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dst_rank = 1;
  if (this->dst_rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->dst_rank(), output);
  }

  // uint32 len = 2;
  if (this->len() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32(2, this->len(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.RecvRequest.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.RecvRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* RecvRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.RecvRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 dst_rank = 1;
  if (this->dst_rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->dst_rank(), target);
  }

  // uint32 len = 2;
  if (this->len() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->len(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.RecvRequest.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.RecvRequest)
  return target;
}

size_t RecvRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.RecvRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 dst_rank = 1;
  if (this->dst_rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->dst_rank());
  }

  // uint32 len = 2;
  if (this->len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->len());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.RecvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecvRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.RecvRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.RecvRequest)
    MergeFrom(*source);
  }
}

void RecvRequest::MergeFrom(const RecvRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.RecvRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.dst_rank() != 0) {
    set_dst_rank(from.dst_rank());
  }
  if (from.len() != 0) {
    set_len(from.len());
  }
}

void RecvRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.RecvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvRequest::CopyFrom(const RecvRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.RecvRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvRequest::IsInitialized() const {
  return true;
}

void RecvRequest::Swap(RecvRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvRequest::InternalSwap(RecvRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(dst_rank_, other->dst_rank_);
  swap(len_, other->len_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecvRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecvResponse::InitAsDefaultInstance() {
}
class RecvResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecvResponse::kBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecvResponse::RecvResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.RecvResponse)
}
RecvResponse::RecvResponse(const RecvResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.buf().size() > 0) {
    buf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
  // @@protoc_insertion_point(copy_constructor:ptre.RecvResponse)
}

void RecvResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecvResponse_rdma_5fservice_2eproto.base);
  buf_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RecvResponse::~RecvResponse() {
  // @@protoc_insertion_point(destructor:ptre.RecvResponse)
  SharedDtor();
}

void RecvResponse::SharedDtor() {
  buf_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecvResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecvResponse& RecvResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecvResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RecvResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.RecvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecvResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes buf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(mutable_buf(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecvResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.RecvResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes buf = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.RecvResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.RecvResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecvResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.RecvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.RecvResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* RecvResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.RecvResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBytesToArray(
        1, this->buf(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.RecvResponse)
  return target;
}

size_t RecvResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.RecvResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->buf());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecvResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.RecvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecvResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecvResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.RecvResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.RecvResponse)
    MergeFrom(*source);
  }
}

void RecvResponse::MergeFrom(const RecvResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.RecvResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.buf().size() > 0) {

    buf_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.buf_);
  }
}

void RecvResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.RecvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecvResponse::CopyFrom(const RecvResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.RecvResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecvResponse::IsInitialized() const {
  return true;
}

void RecvResponse::Swap(RecvResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecvResponse::InternalSwap(RecvResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  buf_.Swap(&other->buf_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata RecvResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermitRequest::InitAsDefaultInstance() {
}
class GetPermitRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPermitRequest::kVarNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPermitRequest::GetPermitRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetPermitRequest)
}
GetPermitRequest::GetPermitRequest(const GetPermitRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.var_name().size() > 0) {
    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  // @@protoc_insertion_point(copy_constructor:ptre.GetPermitRequest)
}

void GetPermitRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPermitRequest_rdma_5fservice_2eproto.base);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetPermitRequest::~GetPermitRequest() {
  // @@protoc_insertion_point(destructor:ptre.GetPermitRequest)
  SharedDtor();
}

void GetPermitRequest::SharedDtor() {
  var_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPermitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermitRequest& GetPermitRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermitRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPermitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetPermitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetPermitRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_var_name(), ptr, ctx, "ptre.GetPermitRequest.var_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetPermitRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetPermitRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string var_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.GetPermitRequest.var_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetPermitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetPermitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetPermitRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetPermitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetPermitRequest.var_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->var_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetPermitRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermitRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetPermitRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.GetPermitRequest.var_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->var_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetPermitRequest)
  return target;
}

size_t GetPermitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetPermitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->var_name());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermitRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetPermitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermitRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetPermitRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetPermitRequest)
    MergeFrom(*source);
  }
}

void GetPermitRequest::MergeFrom(const GetPermitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetPermitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var_name().size() > 0) {

    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
}

void GetPermitRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetPermitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermitRequest::CopyFrom(const GetPermitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetPermitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermitRequest::IsInitialized() const {
  return true;
}

void GetPermitRequest::Swap(GetPermitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPermitRequest::InternalSwap(GetPermitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  var_name_.Swap(&other->var_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermitRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPermitResponse::InitAsDefaultInstance() {
}
class GetPermitResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPermitResponse::kPermitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPermitResponse::GetPermitResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.GetPermitResponse)
}
GetPermitResponse::GetPermitResponse(const GetPermitResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  permit_ = from.permit_;
  // @@protoc_insertion_point(copy_constructor:ptre.GetPermitResponse)
}

void GetPermitResponse::SharedCtor() {
  permit_ = 0;
}

GetPermitResponse::~GetPermitResponse() {
  // @@protoc_insertion_point(destructor:ptre.GetPermitResponse)
  SharedDtor();
}

void GetPermitResponse::SharedDtor() {
}

void GetPermitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPermitResponse& GetPermitResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPermitResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetPermitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.GetPermitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permit_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetPermitResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 permit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          permit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetPermitResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.GetPermitResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 permit = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &permit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.GetPermitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.GetPermitResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetPermitResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.GetPermitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 permit = 1;
  if (this->permit() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->permit(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.GetPermitResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPermitResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.GetPermitResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 permit = 1;
  if (this->permit() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->permit(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.GetPermitResponse)
  return target;
}

size_t GetPermitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.GetPermitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 permit = 1;
  if (this->permit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->permit());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPermitResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.GetPermitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPermitResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPermitResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.GetPermitResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.GetPermitResponse)
    MergeFrom(*source);
  }
}

void GetPermitResponse::MergeFrom(const GetPermitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.GetPermitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.permit() != 0) {
    set_permit(from.permit());
  }
}

void GetPermitResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.GetPermitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPermitResponse::CopyFrom(const GetPermitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.GetPermitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermitResponse::IsInitialized() const {
  return true;
}

void GetPermitResponse::Swap(GetPermitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPermitResponse::InternalSwap(GetPermitResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(permit_, other->permit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermitResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AttemptPushVarRequest::InitAsDefaultInstance() {
}
class AttemptPushVarRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttemptPushVarRequest::kVarNameFieldNumber;
const int AttemptPushVarRequest::kSrcRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttemptPushVarRequest::AttemptPushVarRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.AttemptPushVarRequest)
}
AttemptPushVarRequest::AttemptPushVarRequest(const AttemptPushVarRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.var_name().size() > 0) {
    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  src_rank_ = from.src_rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.AttemptPushVarRequest)
}

void AttemptPushVarRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AttemptPushVarRequest_rdma_5fservice_2eproto.base);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
}

AttemptPushVarRequest::~AttemptPushVarRequest() {
  // @@protoc_insertion_point(destructor:ptre.AttemptPushVarRequest)
  SharedDtor();
}

void AttemptPushVarRequest::SharedDtor() {
  var_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AttemptPushVarRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AttemptPushVarRequest& AttemptPushVarRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AttemptPushVarRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AttemptPushVarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.AttemptPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AttemptPushVarRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_var_name(), ptr, ctx, "ptre.AttemptPushVarRequest.var_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 src_rank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          src_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AttemptPushVarRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.AttemptPushVarRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string var_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.AttemptPushVarRequest.var_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src_rank = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.AttemptPushVarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.AttemptPushVarRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AttemptPushVarRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.AttemptPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.AttemptPushVarRequest.var_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->var_name(), output);
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->src_rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.AttemptPushVarRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* AttemptPushVarRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.AttemptPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.AttemptPushVarRequest.var_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->var_name(), target);
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->src_rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.AttemptPushVarRequest)
  return target;
}

size_t AttemptPushVarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.AttemptPushVarRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->var_name());
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->src_rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttemptPushVarRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.AttemptPushVarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AttemptPushVarRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttemptPushVarRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.AttemptPushVarRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.AttemptPushVarRequest)
    MergeFrom(*source);
  }
}

void AttemptPushVarRequest::MergeFrom(const AttemptPushVarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.AttemptPushVarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var_name().size() > 0) {

    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  if (from.src_rank() != 0) {
    set_src_rank(from.src_rank());
  }
}

void AttemptPushVarRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.AttemptPushVarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttemptPushVarRequest::CopyFrom(const AttemptPushVarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.AttemptPushVarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttemptPushVarRequest::IsInitialized() const {
  return true;
}

void AttemptPushVarRequest::Swap(AttemptPushVarRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttemptPushVarRequest::InternalSwap(AttemptPushVarRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  var_name_.Swap(&other->var_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_rank_, other->src_rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttemptPushVarRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AttemptPushVarResponse::InitAsDefaultInstance() {
}
class AttemptPushVarResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttemptPushVarResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttemptPushVarResponse::AttemptPushVarResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.AttemptPushVarResponse)
}
AttemptPushVarResponse::AttemptPushVarResponse(const AttemptPushVarResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ptre.AttemptPushVarResponse)
}

void AttemptPushVarResponse::SharedCtor() {
  result_ = false;
}

AttemptPushVarResponse::~AttemptPushVarResponse() {
  // @@protoc_insertion_point(destructor:ptre.AttemptPushVarResponse)
  SharedDtor();
}

void AttemptPushVarResponse::SharedDtor() {
}

void AttemptPushVarResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AttemptPushVarResponse& AttemptPushVarResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AttemptPushVarResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void AttemptPushVarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.AttemptPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* AttemptPushVarResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool AttemptPushVarResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.AttemptPushVarResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool result = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.AttemptPushVarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.AttemptPushVarResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void AttemptPushVarResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.AttemptPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.AttemptPushVarResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* AttemptPushVarResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.AttemptPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.AttemptPushVarResponse)
  return target;
}

size_t AttemptPushVarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.AttemptPushVarResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->result() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttemptPushVarResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.AttemptPushVarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AttemptPushVarResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AttemptPushVarResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.AttemptPushVarResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.AttemptPushVarResponse)
    MergeFrom(*source);
  }
}

void AttemptPushVarResponse::MergeFrom(const AttemptPushVarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.AttemptPushVarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void AttemptPushVarResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.AttemptPushVarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttemptPushVarResponse::CopyFrom(const AttemptPushVarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.AttemptPushVarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttemptPushVarResponse::IsInitialized() const {
  return true;
}

void AttemptPushVarResponse::Swap(AttemptPushVarResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttemptPushVarResponse::InternalSwap(AttemptPushVarResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AttemptPushVarResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelPushVarRequest::InitAsDefaultInstance() {
}
class CancelPushVarRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelPushVarRequest::kVarNameFieldNumber;
const int CancelPushVarRequest::kSrcRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelPushVarRequest::CancelPushVarRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.CancelPushVarRequest)
}
CancelPushVarRequest::CancelPushVarRequest(const CancelPushVarRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.var_name().size() > 0) {
    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  src_rank_ = from.src_rank_;
  // @@protoc_insertion_point(copy_constructor:ptre.CancelPushVarRequest)
}

void CancelPushVarRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CancelPushVarRequest_rdma_5fservice_2eproto.base);
  var_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
}

CancelPushVarRequest::~CancelPushVarRequest() {
  // @@protoc_insertion_point(destructor:ptre.CancelPushVarRequest)
  SharedDtor();
}

void CancelPushVarRequest::SharedDtor() {
  var_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CancelPushVarRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelPushVarRequest& CancelPushVarRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelPushVarRequest_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CancelPushVarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.CancelPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  src_rank_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelPushVarRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string var_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_var_name(), ptr, ctx, "ptre.CancelPushVarRequest.var_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 src_rank = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          src_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelPushVarRequest::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.CancelPushVarRequest)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string var_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_var_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->var_name().data(), static_cast<int>(this->var_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "ptre.CancelPushVarRequest.var_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 src_rank = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.CancelPushVarRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.CancelPushVarRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelPushVarRequest::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.CancelPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.CancelPushVarRequest.var_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->var_name(), output);
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->src_rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.CancelPushVarRequest)
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelPushVarRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.CancelPushVarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->var_name().data(), static_cast<int>(this->var_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ptre.CancelPushVarRequest.var_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->var_name(), target);
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->src_rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.CancelPushVarRequest)
  return target;
}

size_t CancelPushVarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.CancelPushVarRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string var_name = 1;
  if (this->var_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->var_name());
  }

  // int32 src_rank = 2;
  if (this->src_rank() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->src_rank());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelPushVarRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.CancelPushVarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelPushVarRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelPushVarRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.CancelPushVarRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.CancelPushVarRequest)
    MergeFrom(*source);
  }
}

void CancelPushVarRequest::MergeFrom(const CancelPushVarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.CancelPushVarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.var_name().size() > 0) {

    var_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.var_name_);
  }
  if (from.src_rank() != 0) {
    set_src_rank(from.src_rank());
  }
}

void CancelPushVarRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.CancelPushVarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelPushVarRequest::CopyFrom(const CancelPushVarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.CancelPushVarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelPushVarRequest::IsInitialized() const {
  return true;
}

void CancelPushVarRequest::Swap(CancelPushVarRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelPushVarRequest::InternalSwap(CancelPushVarRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  var_name_.Swap(&other->var_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(src_rank_, other->src_rank_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelPushVarRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CancelPushVarResponse::InitAsDefaultInstance() {
}
class CancelPushVarResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelPushVarResponse::CancelPushVarResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ptre.CancelPushVarResponse)
}
CancelPushVarResponse::CancelPushVarResponse(const CancelPushVarResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ptre.CancelPushVarResponse)
}

void CancelPushVarResponse::SharedCtor() {
}

CancelPushVarResponse::~CancelPushVarResponse() {
  // @@protoc_insertion_point(destructor:ptre.CancelPushVarResponse)
  SharedDtor();
}

void CancelPushVarResponse::SharedDtor() {
}

void CancelPushVarResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CancelPushVarResponse& CancelPushVarResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CancelPushVarResponse_rdma_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CancelPushVarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ptre.CancelPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CancelPushVarResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CancelPushVarResponse::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:ptre.CancelPushVarResponse)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ptre.CancelPushVarResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ptre.CancelPushVarResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CancelPushVarResponse::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ptre.CancelPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ptre.CancelPushVarResponse)
}

::PROTOBUF_NAMESPACE_ID::uint8* CancelPushVarResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ptre.CancelPushVarResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ptre.CancelPushVarResponse)
  return target;
}

size_t CancelPushVarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ptre.CancelPushVarResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelPushVarResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ptre.CancelPushVarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelPushVarResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CancelPushVarResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ptre.CancelPushVarResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ptre.CancelPushVarResponse)
    MergeFrom(*source);
  }
}

void CancelPushVarResponse::MergeFrom(const CancelPushVarResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ptre.CancelPushVarResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CancelPushVarResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ptre.CancelPushVarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelPushVarResponse::CopyFrom(const CancelPushVarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ptre.CancelPushVarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelPushVarResponse::IsInitialized() const {
  return true;
}

void CancelPushVarResponse::Swap(CancelPushVarResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelPushVarResponse::InternalSwap(CancelPushVarResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CancelPushVarResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ptre
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ptre::MemoryRegion* Arena::CreateMaybeMessage< ::ptre::MemoryRegion >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::MemoryRegion >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetLIDRequest* Arena::CreateMaybeMessage< ::ptre::GetLIDRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetLIDRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetLIDResponse* Arena::CreateMaybeMessage< ::ptre::GetLIDResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetLIDResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetQPAttrRequest* Arena::CreateMaybeMessage< ::ptre::GetQPAttrRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetQPAttrRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetQPAttrResponse* Arena::CreateMaybeMessage< ::ptre::GetQPAttrResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetQPAttrResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteAddressRequest* Arena::CreateMaybeMessage< ::ptre::GetRemoteAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteAddressResponse* Arena::CreateMaybeMessage< ::ptre::GetRemoteAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteEnvRequest* Arena::CreateMaybeMessage< ::ptre::GetRemoteEnvRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteEnvRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteEnvResponse* Arena::CreateMaybeMessage< ::ptre::GetRemoteEnvResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteEnvResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteParamAddressRequest* Arena::CreateMaybeMessage< ::ptre::GetRemoteParamAddressRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteParamAddressRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteParamAddressResponse* Arena::CreateMaybeMessage< ::ptre::GetRemoteParamAddressResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteParamAddressResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::AttemptPushRequest* Arena::CreateMaybeMessage< ::ptre::AttemptPushRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::AttemptPushRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::AttemptPushResponse* Arena::CreateMaybeMessage< ::ptre::AttemptPushResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::AttemptPushResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::NotifyPushDoneRequest* Arena::CreateMaybeMessage< ::ptre::NotifyPushDoneRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::NotifyPushDoneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::NotifyPushDoneResponse* Arena::CreateMaybeMessage< ::ptre::NotifyPushDoneResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::NotifyPushDoneResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::BarrierRequest* Arena::CreateMaybeMessage< ::ptre::BarrierRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::BarrierRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::BarrierResponse* Arena::CreateMaybeMessage< ::ptre::BarrierResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::BarrierResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteAddressV2Request* Arena::CreateMaybeMessage< ::ptre::GetRemoteAddressV2Request >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteAddressV2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetRemoteAddressV2Response* Arena::CreateMaybeMessage< ::ptre::GetRemoteAddressV2Response >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetRemoteAddressV2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::RecvRequest* Arena::CreateMaybeMessage< ::ptre::RecvRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::RecvRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::RecvResponse* Arena::CreateMaybeMessage< ::ptre::RecvResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::RecvResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetPermitRequest* Arena::CreateMaybeMessage< ::ptre::GetPermitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetPermitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::GetPermitResponse* Arena::CreateMaybeMessage< ::ptre::GetPermitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::GetPermitResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::AttemptPushVarRequest* Arena::CreateMaybeMessage< ::ptre::AttemptPushVarRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::AttemptPushVarRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::AttemptPushVarResponse* Arena::CreateMaybeMessage< ::ptre::AttemptPushVarResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::AttemptPushVarResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::CancelPushVarRequest* Arena::CreateMaybeMessage< ::ptre::CancelPushVarRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::CancelPushVarRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ptre::CancelPushVarResponse* Arena::CreateMaybeMessage< ::ptre::CancelPushVarResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ptre::CancelPushVarResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
