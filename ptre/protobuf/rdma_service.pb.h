// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rdma_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_rdma_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_rdma_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_rdma_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_rdma_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[27]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_rdma_5fservice_2eproto;
namespace ptre {
class AttemptPushRequest;
class AttemptPushRequestDefaultTypeInternal;
extern AttemptPushRequestDefaultTypeInternal _AttemptPushRequest_default_instance_;
class AttemptPushResponse;
class AttemptPushResponseDefaultTypeInternal;
extern AttemptPushResponseDefaultTypeInternal _AttemptPushResponse_default_instance_;
class AttemptPushVarRequest;
class AttemptPushVarRequestDefaultTypeInternal;
extern AttemptPushVarRequestDefaultTypeInternal _AttemptPushVarRequest_default_instance_;
class AttemptPushVarResponse;
class AttemptPushVarResponseDefaultTypeInternal;
extern AttemptPushVarResponseDefaultTypeInternal _AttemptPushVarResponse_default_instance_;
class BarrierRequest;
class BarrierRequestDefaultTypeInternal;
extern BarrierRequestDefaultTypeInternal _BarrierRequest_default_instance_;
class BarrierResponse;
class BarrierResponseDefaultTypeInternal;
extern BarrierResponseDefaultTypeInternal _BarrierResponse_default_instance_;
class CancelPushVarRequest;
class CancelPushVarRequestDefaultTypeInternal;
extern CancelPushVarRequestDefaultTypeInternal _CancelPushVarRequest_default_instance_;
class CancelPushVarResponse;
class CancelPushVarResponseDefaultTypeInternal;
extern CancelPushVarResponseDefaultTypeInternal _CancelPushVarResponse_default_instance_;
class GetLIDRequest;
class GetLIDRequestDefaultTypeInternal;
extern GetLIDRequestDefaultTypeInternal _GetLIDRequest_default_instance_;
class GetLIDResponse;
class GetLIDResponseDefaultTypeInternal;
extern GetLIDResponseDefaultTypeInternal _GetLIDResponse_default_instance_;
class GetPermitRequest;
class GetPermitRequestDefaultTypeInternal;
extern GetPermitRequestDefaultTypeInternal _GetPermitRequest_default_instance_;
class GetPermitResponse;
class GetPermitResponseDefaultTypeInternal;
extern GetPermitResponseDefaultTypeInternal _GetPermitResponse_default_instance_;
class GetQPAttrRequest;
class GetQPAttrRequestDefaultTypeInternal;
extern GetQPAttrRequestDefaultTypeInternal _GetQPAttrRequest_default_instance_;
class GetQPAttrResponse;
class GetQPAttrResponseDefaultTypeInternal;
extern GetQPAttrResponseDefaultTypeInternal _GetQPAttrResponse_default_instance_;
class GetRemoteAddressRequest;
class GetRemoteAddressRequestDefaultTypeInternal;
extern GetRemoteAddressRequestDefaultTypeInternal _GetRemoteAddressRequest_default_instance_;
class GetRemoteAddressResponse;
class GetRemoteAddressResponseDefaultTypeInternal;
extern GetRemoteAddressResponseDefaultTypeInternal _GetRemoteAddressResponse_default_instance_;
class GetRemoteAddressV2Request;
class GetRemoteAddressV2RequestDefaultTypeInternal;
extern GetRemoteAddressV2RequestDefaultTypeInternal _GetRemoteAddressV2Request_default_instance_;
class GetRemoteAddressV2Response;
class GetRemoteAddressV2ResponseDefaultTypeInternal;
extern GetRemoteAddressV2ResponseDefaultTypeInternal _GetRemoteAddressV2Response_default_instance_;
class GetRemoteEnvRequest;
class GetRemoteEnvRequestDefaultTypeInternal;
extern GetRemoteEnvRequestDefaultTypeInternal _GetRemoteEnvRequest_default_instance_;
class GetRemoteEnvResponse;
class GetRemoteEnvResponseDefaultTypeInternal;
extern GetRemoteEnvResponseDefaultTypeInternal _GetRemoteEnvResponse_default_instance_;
class GetRemoteParamAddressRequest;
class GetRemoteParamAddressRequestDefaultTypeInternal;
extern GetRemoteParamAddressRequestDefaultTypeInternal _GetRemoteParamAddressRequest_default_instance_;
class GetRemoteParamAddressResponse;
class GetRemoteParamAddressResponseDefaultTypeInternal;
extern GetRemoteParamAddressResponseDefaultTypeInternal _GetRemoteParamAddressResponse_default_instance_;
class MemoryRegion;
class MemoryRegionDefaultTypeInternal;
extern MemoryRegionDefaultTypeInternal _MemoryRegion_default_instance_;
class NotifyPushDoneRequest;
class NotifyPushDoneRequestDefaultTypeInternal;
extern NotifyPushDoneRequestDefaultTypeInternal _NotifyPushDoneRequest_default_instance_;
class NotifyPushDoneResponse;
class NotifyPushDoneResponseDefaultTypeInternal;
extern NotifyPushDoneResponseDefaultTypeInternal _NotifyPushDoneResponse_default_instance_;
class RecvRequest;
class RecvRequestDefaultTypeInternal;
extern RecvRequestDefaultTypeInternal _RecvRequest_default_instance_;
class RecvResponse;
class RecvResponseDefaultTypeInternal;
extern RecvResponseDefaultTypeInternal _RecvResponse_default_instance_;
}  // namespace ptre
PROTOBUF_NAMESPACE_OPEN
template<> ::ptre::AttemptPushRequest* Arena::CreateMaybeMessage<::ptre::AttemptPushRequest>(Arena*);
template<> ::ptre::AttemptPushResponse* Arena::CreateMaybeMessage<::ptre::AttemptPushResponse>(Arena*);
template<> ::ptre::AttemptPushVarRequest* Arena::CreateMaybeMessage<::ptre::AttemptPushVarRequest>(Arena*);
template<> ::ptre::AttemptPushVarResponse* Arena::CreateMaybeMessage<::ptre::AttemptPushVarResponse>(Arena*);
template<> ::ptre::BarrierRequest* Arena::CreateMaybeMessage<::ptre::BarrierRequest>(Arena*);
template<> ::ptre::BarrierResponse* Arena::CreateMaybeMessage<::ptre::BarrierResponse>(Arena*);
template<> ::ptre::CancelPushVarRequest* Arena::CreateMaybeMessage<::ptre::CancelPushVarRequest>(Arena*);
template<> ::ptre::CancelPushVarResponse* Arena::CreateMaybeMessage<::ptre::CancelPushVarResponse>(Arena*);
template<> ::ptre::GetLIDRequest* Arena::CreateMaybeMessage<::ptre::GetLIDRequest>(Arena*);
template<> ::ptre::GetLIDResponse* Arena::CreateMaybeMessage<::ptre::GetLIDResponse>(Arena*);
template<> ::ptre::GetPermitRequest* Arena::CreateMaybeMessage<::ptre::GetPermitRequest>(Arena*);
template<> ::ptre::GetPermitResponse* Arena::CreateMaybeMessage<::ptre::GetPermitResponse>(Arena*);
template<> ::ptre::GetQPAttrRequest* Arena::CreateMaybeMessage<::ptre::GetQPAttrRequest>(Arena*);
template<> ::ptre::GetQPAttrResponse* Arena::CreateMaybeMessage<::ptre::GetQPAttrResponse>(Arena*);
template<> ::ptre::GetRemoteAddressRequest* Arena::CreateMaybeMessage<::ptre::GetRemoteAddressRequest>(Arena*);
template<> ::ptre::GetRemoteAddressResponse* Arena::CreateMaybeMessage<::ptre::GetRemoteAddressResponse>(Arena*);
template<> ::ptre::GetRemoteAddressV2Request* Arena::CreateMaybeMessage<::ptre::GetRemoteAddressV2Request>(Arena*);
template<> ::ptre::GetRemoteAddressV2Response* Arena::CreateMaybeMessage<::ptre::GetRemoteAddressV2Response>(Arena*);
template<> ::ptre::GetRemoteEnvRequest* Arena::CreateMaybeMessage<::ptre::GetRemoteEnvRequest>(Arena*);
template<> ::ptre::GetRemoteEnvResponse* Arena::CreateMaybeMessage<::ptre::GetRemoteEnvResponse>(Arena*);
template<> ::ptre::GetRemoteParamAddressRequest* Arena::CreateMaybeMessage<::ptre::GetRemoteParamAddressRequest>(Arena*);
template<> ::ptre::GetRemoteParamAddressResponse* Arena::CreateMaybeMessage<::ptre::GetRemoteParamAddressResponse>(Arena*);
template<> ::ptre::MemoryRegion* Arena::CreateMaybeMessage<::ptre::MemoryRegion>(Arena*);
template<> ::ptre::NotifyPushDoneRequest* Arena::CreateMaybeMessage<::ptre::NotifyPushDoneRequest>(Arena*);
template<> ::ptre::NotifyPushDoneResponse* Arena::CreateMaybeMessage<::ptre::NotifyPushDoneResponse>(Arena*);
template<> ::ptre::RecvRequest* Arena::CreateMaybeMessage<::ptre::RecvRequest>(Arena*);
template<> ::ptre::RecvResponse* Arena::CreateMaybeMessage<::ptre::RecvResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ptre {

enum BufType : int {
  BUF_TYPE_RAW = 0,
  BUF_TYPE_RECV_BUF = 1,
  BUF_TYPE_SEND_BUF = 2,
  BUF_TYPE_AGG_BUF_STATE = 3,
  BUF_TYPE_AGG_BUF = 4,
  BUF_TYPE_FLAG_RECV = 5,
  BUF_TYPE_FLAG_SEND = 6,
  BUF_TYPE_BARRIER_COUNTER = 7,
  BUF_TYPE_BARRIER_RELEASE = 8,
  BUF_TYPE_PUSH_PERMIT = 9,
  BUF_TYPE_PUSH_PERMIT_READ = 10,
  BUF_TYPE_PULL_KEY = 11,
  BUF_TYPE_PULL_TENSOR_A = 12,
  BUF_TYPE_PULL_TENSOR_B = 13,
  BufType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  BufType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool BufType_IsValid(int value);
constexpr BufType BufType_MIN = BUF_TYPE_RAW;
constexpr BufType BufType_MAX = BUF_TYPE_PULL_TENSOR_B;
constexpr int BufType_ARRAYSIZE = BufType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BufType_descriptor();
template<typename T>
inline const std::string& BufType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, BufType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function BufType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    BufType_descriptor(), enum_t_value);
}
inline bool BufType_Parse(
    const std::string& name, BufType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<BufType>(
    BufType_descriptor(), name, value);
}
// ===================================================================

class MemoryRegion :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.MemoryRegion) */ {
 public:
  MemoryRegion();
  virtual ~MemoryRegion();

  MemoryRegion(const MemoryRegion& from);
  MemoryRegion(MemoryRegion&& from) noexcept
    : MemoryRegion() {
    *this = ::std::move(from);
  }

  inline MemoryRegion& operator=(const MemoryRegion& from) {
    CopyFrom(from);
    return *this;
  }
  inline MemoryRegion& operator=(MemoryRegion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MemoryRegion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MemoryRegion* internal_default_instance() {
    return reinterpret_cast<const MemoryRegion*>(
               &_MemoryRegion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MemoryRegion* other);
  friend void swap(MemoryRegion& a, MemoryRegion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MemoryRegion* New() const final {
    return CreateMaybeMessage<MemoryRegion>(nullptr);
  }

  MemoryRegion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MemoryRegion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MemoryRegion& from);
  void MergeFrom(const MemoryRegion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MemoryRegion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.MemoryRegion";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 remote_addr = 1;
  void clear_remote_addr();
  static const int kRemoteAddrFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint64 remote_addr() const;
  void set_remote_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 rkey = 2;
  void clear_rkey();
  static const int kRkeyFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 rkey() const;
  void set_rkey(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:ptre.MemoryRegion)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 remote_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rkey_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLIDRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetLIDRequest) */ {
 public:
  GetLIDRequest();
  virtual ~GetLIDRequest();

  GetLIDRequest(const GetLIDRequest& from);
  GetLIDRequest(GetLIDRequest&& from) noexcept
    : GetLIDRequest() {
    *this = ::std::move(from);
  }

  inline GetLIDRequest& operator=(const GetLIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLIDRequest& operator=(GetLIDRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetLIDRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLIDRequest* internal_default_instance() {
    return reinterpret_cast<const GetLIDRequest*>(
               &_GetLIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetLIDRequest* other);
  friend void swap(GetLIDRequest& a, GetLIDRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLIDRequest* New() const final {
    return CreateMaybeMessage<GetLIDRequest>(nullptr);
  }

  GetLIDRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLIDRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetLIDRequest& from);
  void MergeFrom(const GetLIDRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLIDRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetLIDRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ptre.GetLIDRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetLIDResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetLIDResponse) */ {
 public:
  GetLIDResponse();
  virtual ~GetLIDResponse();

  GetLIDResponse(const GetLIDResponse& from);
  GetLIDResponse(GetLIDResponse&& from) noexcept
    : GetLIDResponse() {
    *this = ::std::move(from);
  }

  inline GetLIDResponse& operator=(const GetLIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLIDResponse& operator=(GetLIDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetLIDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetLIDResponse* internal_default_instance() {
    return reinterpret_cast<const GetLIDResponse*>(
               &_GetLIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetLIDResponse* other);
  friend void swap(GetLIDResponse& a, GetLIDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetLIDResponse* New() const final {
    return CreateMaybeMessage<GetLIDResponse>(nullptr);
  }

  GetLIDResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetLIDResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetLIDResponse& from);
  void MergeFrom(const GetLIDResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetLIDResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetLIDResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 lid = 1;
  void clear_lid();
  static const int kLidFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 lid() const;
  void set_lid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetLIDResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 lid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetQPAttrRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetQPAttrRequest) */ {
 public:
  GetQPAttrRequest();
  virtual ~GetQPAttrRequest();

  GetQPAttrRequest(const GetQPAttrRequest& from);
  GetQPAttrRequest(GetQPAttrRequest&& from) noexcept
    : GetQPAttrRequest() {
    *this = ::std::move(from);
  }

  inline GetQPAttrRequest& operator=(const GetQPAttrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetQPAttrRequest& operator=(GetQPAttrRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetQPAttrRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetQPAttrRequest* internal_default_instance() {
    return reinterpret_cast<const GetQPAttrRequest*>(
               &_GetQPAttrRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetQPAttrRequest* other);
  friend void swap(GetQPAttrRequest& a, GetQPAttrRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetQPAttrRequest* New() const final {
    return CreateMaybeMessage<GetQPAttrRequest>(nullptr);
  }

  GetQPAttrRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetQPAttrRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetQPAttrRequest& from);
  void MergeFrom(const GetQPAttrRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetQPAttrRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetQPAttrRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 src_rank = 1;
  void clear_src_rank();
  static const int kSrcRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank() const;
  void set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetQPAttrRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetQPAttrResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetQPAttrResponse) */ {
 public:
  GetQPAttrResponse();
  virtual ~GetQPAttrResponse();

  GetQPAttrResponse(const GetQPAttrResponse& from);
  GetQPAttrResponse(GetQPAttrResponse&& from) noexcept
    : GetQPAttrResponse() {
    *this = ::std::move(from);
  }

  inline GetQPAttrResponse& operator=(const GetQPAttrResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetQPAttrResponse& operator=(GetQPAttrResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetQPAttrResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetQPAttrResponse* internal_default_instance() {
    return reinterpret_cast<const GetQPAttrResponse*>(
               &_GetQPAttrResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetQPAttrResponse* other);
  friend void swap(GetQPAttrResponse& a, GetQPAttrResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetQPAttrResponse* New() const final {
    return CreateMaybeMessage<GetQPAttrResponse>(nullptr);
  }

  GetQPAttrResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetQPAttrResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetQPAttrResponse& from);
  void MergeFrom(const GetQPAttrResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetQPAttrResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetQPAttrResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 qpn = 1;
  void clear_qpn();
  static const int kQpnFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 qpn() const;
  void set_qpn(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 psn = 2;
  void clear_psn();
  static const int kPsnFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 psn() const;
  void set_psn(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetQPAttrResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 qpn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 psn_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteAddressRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteAddressRequest) */ {
 public:
  GetRemoteAddressRequest();
  virtual ~GetRemoteAddressRequest();

  GetRemoteAddressRequest(const GetRemoteAddressRequest& from);
  GetRemoteAddressRequest(GetRemoteAddressRequest&& from) noexcept
    : GetRemoteAddressRequest() {
    *this = ::std::move(from);
  }

  inline GetRemoteAddressRequest& operator=(const GetRemoteAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteAddressRequest& operator=(GetRemoteAddressRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteAddressRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteAddressRequest* internal_default_instance() {
    return reinterpret_cast<const GetRemoteAddressRequest*>(
               &_GetRemoteAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetRemoteAddressRequest* other);
  friend void swap(GetRemoteAddressRequest& a, GetRemoteAddressRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteAddressRequest* New() const final {
    return CreateMaybeMessage<GetRemoteAddressRequest>(nullptr);
  }

  GetRemoteAddressRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteAddressRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteAddressRequest& from);
  void MergeFrom(const GetRemoteAddressRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteAddressRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteAddressRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string var_name = 2;
  void clear_var_name();
  static const int kVarNameFieldNumber = 2;
  const std::string& var_name() const;
  void set_var_name(const std::string& value);
  void set_var_name(std::string&& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  std::string* mutable_var_name();
  std::string* release_var_name();
  void set_allocated_var_name(std::string* var_name);

  // .ptre.BufType buf_type = 1;
  void clear_buf_type();
  static const int kBufTypeFieldNumber = 1;
  ::ptre::BufType buf_type() const;
  void set_buf_type(::ptre::BufType value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteAddressRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  int buf_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteAddressResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteAddressResponse) */ {
 public:
  GetRemoteAddressResponse();
  virtual ~GetRemoteAddressResponse();

  GetRemoteAddressResponse(const GetRemoteAddressResponse& from);
  GetRemoteAddressResponse(GetRemoteAddressResponse&& from) noexcept
    : GetRemoteAddressResponse() {
    *this = ::std::move(from);
  }

  inline GetRemoteAddressResponse& operator=(const GetRemoteAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteAddressResponse& operator=(GetRemoteAddressResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteAddressResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteAddressResponse* internal_default_instance() {
    return reinterpret_cast<const GetRemoteAddressResponse*>(
               &_GetRemoteAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetRemoteAddressResponse* other);
  friend void swap(GetRemoteAddressResponse& a, GetRemoteAddressResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteAddressResponse* New() const final {
    return CreateMaybeMessage<GetRemoteAddressResponse>(nullptr);
  }

  GetRemoteAddressResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteAddressResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteAddressResponse& from);
  void MergeFrom(const GetRemoteAddressResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteAddressResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteAddressResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 remote_addr = 1;
  void clear_remote_addr();
  static const int kRemoteAddrFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint64 remote_addr() const;
  void set_remote_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 rkey = 2;
  void clear_rkey();
  static const int kRkeyFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 rkey() const;
  void set_rkey(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteAddressResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 remote_addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rkey_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteEnvRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteEnvRequest) */ {
 public:
  GetRemoteEnvRequest();
  virtual ~GetRemoteEnvRequest();

  GetRemoteEnvRequest(const GetRemoteEnvRequest& from);
  GetRemoteEnvRequest(GetRemoteEnvRequest&& from) noexcept
    : GetRemoteEnvRequest() {
    *this = ::std::move(from);
  }

  inline GetRemoteEnvRequest& operator=(const GetRemoteEnvRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteEnvRequest& operator=(GetRemoteEnvRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteEnvRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteEnvRequest* internal_default_instance() {
    return reinterpret_cast<const GetRemoteEnvRequest*>(
               &_GetRemoteEnvRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(GetRemoteEnvRequest* other);
  friend void swap(GetRemoteEnvRequest& a, GetRemoteEnvRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteEnvRequest* New() const final {
    return CreateMaybeMessage<GetRemoteEnvRequest>(nullptr);
  }

  GetRemoteEnvRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteEnvRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteEnvRequest& from);
  void MergeFrom(const GetRemoteEnvRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteEnvRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteEnvRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteEnvRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteEnvResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteEnvResponse) */ {
 public:
  GetRemoteEnvResponse();
  virtual ~GetRemoteEnvResponse();

  GetRemoteEnvResponse(const GetRemoteEnvResponse& from);
  GetRemoteEnvResponse(GetRemoteEnvResponse&& from) noexcept
    : GetRemoteEnvResponse() {
    *this = ::std::move(from);
  }

  inline GetRemoteEnvResponse& operator=(const GetRemoteEnvResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteEnvResponse& operator=(GetRemoteEnvResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteEnvResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteEnvResponse* internal_default_instance() {
    return reinterpret_cast<const GetRemoteEnvResponse*>(
               &_GetRemoteEnvResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetRemoteEnvResponse* other);
  friend void swap(GetRemoteEnvResponse& a, GetRemoteEnvResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteEnvResponse* New() const final {
    return CreateMaybeMessage<GetRemoteEnvResponse>(nullptr);
  }

  GetRemoteEnvResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteEnvResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteEnvResponse& from);
  void MergeFrom(const GetRemoteEnvResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteEnvResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteEnvResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 lid = 2;
  void clear_lid();
  static const int kLidFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 lid() const;
  void set_lid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // uint64 snp = 4;
  void clear_snp();
  static const int kSnpFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::uint64 snp() const;
  void set_snp(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint64 iid = 5;
  void clear_iid();
  static const int kIidFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::uint64 iid() const;
  void set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // int32 qpn = 3;
  void clear_qpn();
  static const int kQpnFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 qpn() const;
  void set_qpn(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteEnvResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  ::PROTOBUF_NAMESPACE_ID::int32 lid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 snp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 iid_;
  ::PROTOBUF_NAMESPACE_ID::int32 qpn_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteParamAddressRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteParamAddressRequest) */ {
 public:
  GetRemoteParamAddressRequest();
  virtual ~GetRemoteParamAddressRequest();

  GetRemoteParamAddressRequest(const GetRemoteParamAddressRequest& from);
  GetRemoteParamAddressRequest(GetRemoteParamAddressRequest&& from) noexcept
    : GetRemoteParamAddressRequest() {
    *this = ::std::move(from);
  }

  inline GetRemoteParamAddressRequest& operator=(const GetRemoteParamAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteParamAddressRequest& operator=(GetRemoteParamAddressRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteParamAddressRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteParamAddressRequest* internal_default_instance() {
    return reinterpret_cast<const GetRemoteParamAddressRequest*>(
               &_GetRemoteParamAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GetRemoteParamAddressRequest* other);
  friend void swap(GetRemoteParamAddressRequest& a, GetRemoteParamAddressRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteParamAddressRequest* New() const final {
    return CreateMaybeMessage<GetRemoteParamAddressRequest>(nullptr);
  }

  GetRemoteParamAddressRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteParamAddressRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteParamAddressRequest& from);
  void MergeFrom(const GetRemoteParamAddressRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteParamAddressRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteParamAddressRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteParamAddressRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteParamAddressResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteParamAddressResponse) */ {
 public:
  GetRemoteParamAddressResponse();
  virtual ~GetRemoteParamAddressResponse();

  GetRemoteParamAddressResponse(const GetRemoteParamAddressResponse& from);
  GetRemoteParamAddressResponse(GetRemoteParamAddressResponse&& from) noexcept
    : GetRemoteParamAddressResponse() {
    *this = ::std::move(from);
  }

  inline GetRemoteParamAddressResponse& operator=(const GetRemoteParamAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteParamAddressResponse& operator=(GetRemoteParamAddressResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteParamAddressResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteParamAddressResponse* internal_default_instance() {
    return reinterpret_cast<const GetRemoteParamAddressResponse*>(
               &_GetRemoteParamAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GetRemoteParamAddressResponse* other);
  friend void swap(GetRemoteParamAddressResponse& a, GetRemoteParamAddressResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteParamAddressResponse* New() const final {
    return CreateMaybeMessage<GetRemoteParamAddressResponse>(nullptr);
  }

  GetRemoteParamAddressResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteParamAddressResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteParamAddressResponse& from);
  void MergeFrom(const GetRemoteParamAddressResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteParamAddressResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteParamAddressResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ptre.MemoryRegion mr = 3;
  int mr_size() const;
  void clear_mr();
  static const int kMrFieldNumber = 3;
  ::ptre::MemoryRegion* mutable_mr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >*
      mutable_mr();
  const ::ptre::MemoryRegion& mr(int index) const;
  ::ptre::MemoryRegion* add_mr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >&
      mr() const;

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteParamAddressResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion > mr_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttemptPushRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.AttemptPushRequest) */ {
 public:
  AttemptPushRequest();
  virtual ~AttemptPushRequest();

  AttemptPushRequest(const AttemptPushRequest& from);
  AttemptPushRequest(AttemptPushRequest&& from) noexcept
    : AttemptPushRequest() {
    *this = ::std::move(from);
  }

  inline AttemptPushRequest& operator=(const AttemptPushRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttemptPushRequest& operator=(AttemptPushRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttemptPushRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttemptPushRequest* internal_default_instance() {
    return reinterpret_cast<const AttemptPushRequest*>(
               &_AttemptPushRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(AttemptPushRequest* other);
  friend void swap(AttemptPushRequest& a, AttemptPushRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttemptPushRequest* New() const final {
    return CreateMaybeMessage<AttemptPushRequest>(nullptr);
  }

  AttemptPushRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttemptPushRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttemptPushRequest& from);
  void MergeFrom(const AttemptPushRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttemptPushRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.AttemptPushRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 vstep = 2;
  void clear_vstep();
  static const int kVstepFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 vstep() const;
  void set_vstep(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.AttemptPushRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  ::PROTOBUF_NAMESPACE_ID::int32 vstep_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttemptPushResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.AttemptPushResponse) */ {
 public:
  AttemptPushResponse();
  virtual ~AttemptPushResponse();

  AttemptPushResponse(const AttemptPushResponse& from);
  AttemptPushResponse(AttemptPushResponse&& from) noexcept
    : AttemptPushResponse() {
    *this = ::std::move(from);
  }

  inline AttemptPushResponse& operator=(const AttemptPushResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttemptPushResponse& operator=(AttemptPushResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttemptPushResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttemptPushResponse* internal_default_instance() {
    return reinterpret_cast<const AttemptPushResponse*>(
               &_AttemptPushResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(AttemptPushResponse* other);
  friend void swap(AttemptPushResponse& a, AttemptPushResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttemptPushResponse* New() const final {
    return CreateMaybeMessage<AttemptPushResponse>(nullptr);
  }

  AttemptPushResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttemptPushResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttemptPushResponse& from);
  void MergeFrom(const AttemptPushResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttemptPushResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.AttemptPushResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool available = 1;
  void clear_available();
  static const int kAvailableFieldNumber = 1;
  bool available() const;
  void set_available(bool value);

  // @@protoc_insertion_point(class_scope:ptre.AttemptPushResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool available_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class NotifyPushDoneRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.NotifyPushDoneRequest) */ {
 public:
  NotifyPushDoneRequest();
  virtual ~NotifyPushDoneRequest();

  NotifyPushDoneRequest(const NotifyPushDoneRequest& from);
  NotifyPushDoneRequest(NotifyPushDoneRequest&& from) noexcept
    : NotifyPushDoneRequest() {
    *this = ::std::move(from);
  }

  inline NotifyPushDoneRequest& operator=(const NotifyPushDoneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPushDoneRequest& operator=(NotifyPushDoneRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotifyPushDoneRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyPushDoneRequest* internal_default_instance() {
    return reinterpret_cast<const NotifyPushDoneRequest*>(
               &_NotifyPushDoneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(NotifyPushDoneRequest* other);
  friend void swap(NotifyPushDoneRequest& a, NotifyPushDoneRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotifyPushDoneRequest* New() const final {
    return CreateMaybeMessage<NotifyPushDoneRequest>(nullptr);
  }

  NotifyPushDoneRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotifyPushDoneRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotifyPushDoneRequest& from);
  void MergeFrom(const NotifyPushDoneRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyPushDoneRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.NotifyPushDoneRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string var_name = 2;
  void clear_var_name();
  static const int kVarNameFieldNumber = 2;
  const std::string& var_name() const;
  void set_var_name(const std::string& value);
  void set_var_name(std::string&& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  std::string* mutable_var_name();
  std::string* release_var_name();
  void set_allocated_var_name(std::string* var_name);

  // int32 src_rank = 1;
  void clear_src_rank();
  static const int kSrcRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank() const;
  void set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.NotifyPushDoneRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class NotifyPushDoneResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.NotifyPushDoneResponse) */ {
 public:
  NotifyPushDoneResponse();
  virtual ~NotifyPushDoneResponse();

  NotifyPushDoneResponse(const NotifyPushDoneResponse& from);
  NotifyPushDoneResponse(NotifyPushDoneResponse&& from) noexcept
    : NotifyPushDoneResponse() {
    *this = ::std::move(from);
  }

  inline NotifyPushDoneResponse& operator=(const NotifyPushDoneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NotifyPushDoneResponse& operator=(NotifyPushDoneResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const NotifyPushDoneResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NotifyPushDoneResponse* internal_default_instance() {
    return reinterpret_cast<const NotifyPushDoneResponse*>(
               &_NotifyPushDoneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(NotifyPushDoneResponse* other);
  friend void swap(NotifyPushDoneResponse& a, NotifyPushDoneResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotifyPushDoneResponse* New() const final {
    return CreateMaybeMessage<NotifyPushDoneResponse>(nullptr);
  }

  NotifyPushDoneResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NotifyPushDoneResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NotifyPushDoneResponse& from);
  void MergeFrom(const NotifyPushDoneResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NotifyPushDoneResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.NotifyPushDoneResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ptre.NotifyPushDoneResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BarrierRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.BarrierRequest) */ {
 public:
  BarrierRequest();
  virtual ~BarrierRequest();

  BarrierRequest(const BarrierRequest& from);
  BarrierRequest(BarrierRequest&& from) noexcept
    : BarrierRequest() {
    *this = ::std::move(from);
  }

  inline BarrierRequest& operator=(const BarrierRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarrierRequest& operator=(BarrierRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BarrierRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BarrierRequest* internal_default_instance() {
    return reinterpret_cast<const BarrierRequest*>(
               &_BarrierRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(BarrierRequest* other);
  friend void swap(BarrierRequest& a, BarrierRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BarrierRequest* New() const final {
    return CreateMaybeMessage<BarrierRequest>(nullptr);
  }

  BarrierRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BarrierRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BarrierRequest& from);
  void MergeFrom(const BarrierRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BarrierRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.BarrierRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ptre.BarrierRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class BarrierResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.BarrierResponse) */ {
 public:
  BarrierResponse();
  virtual ~BarrierResponse();

  BarrierResponse(const BarrierResponse& from);
  BarrierResponse(BarrierResponse&& from) noexcept
    : BarrierResponse() {
    *this = ::std::move(from);
  }

  inline BarrierResponse& operator=(const BarrierResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarrierResponse& operator=(BarrierResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BarrierResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BarrierResponse* internal_default_instance() {
    return reinterpret_cast<const BarrierResponse*>(
               &_BarrierResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(BarrierResponse* other);
  friend void swap(BarrierResponse& a, BarrierResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BarrierResponse* New() const final {
    return CreateMaybeMessage<BarrierResponse>(nullptr);
  }

  BarrierResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BarrierResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BarrierResponse& from);
  void MergeFrom(const BarrierResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BarrierResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.BarrierResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool entered = 1;
  void clear_entered();
  static const int kEnteredFieldNumber = 1;
  bool entered() const;
  void set_entered(bool value);

  // @@protoc_insertion_point(class_scope:ptre.BarrierResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool entered_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteAddressV2Request :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteAddressV2Request) */ {
 public:
  GetRemoteAddressV2Request();
  virtual ~GetRemoteAddressV2Request();

  GetRemoteAddressV2Request(const GetRemoteAddressV2Request& from);
  GetRemoteAddressV2Request(GetRemoteAddressV2Request&& from) noexcept
    : GetRemoteAddressV2Request() {
    *this = ::std::move(from);
  }

  inline GetRemoteAddressV2Request& operator=(const GetRemoteAddressV2Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteAddressV2Request& operator=(GetRemoteAddressV2Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteAddressV2Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteAddressV2Request* internal_default_instance() {
    return reinterpret_cast<const GetRemoteAddressV2Request*>(
               &_GetRemoteAddressV2Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(GetRemoteAddressV2Request* other);
  friend void swap(GetRemoteAddressV2Request& a, GetRemoteAddressV2Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteAddressV2Request* New() const final {
    return CreateMaybeMessage<GetRemoteAddressV2Request>(nullptr);
  }

  GetRemoteAddressV2Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteAddressV2Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteAddressV2Request& from);
  void MergeFrom(const GetRemoteAddressV2Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteAddressV2Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteAddressV2Request";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // .ptre.BufType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ptre::BufType type() const;
  void set_type(::ptre::BufType value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteAddressV2Request)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetRemoteAddressV2Response :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetRemoteAddressV2Response) */ {
 public:
  GetRemoteAddressV2Response();
  virtual ~GetRemoteAddressV2Response();

  GetRemoteAddressV2Response(const GetRemoteAddressV2Response& from);
  GetRemoteAddressV2Response(GetRemoteAddressV2Response&& from) noexcept
    : GetRemoteAddressV2Response() {
    *this = ::std::move(from);
  }

  inline GetRemoteAddressV2Response& operator=(const GetRemoteAddressV2Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRemoteAddressV2Response& operator=(GetRemoteAddressV2Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetRemoteAddressV2Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRemoteAddressV2Response* internal_default_instance() {
    return reinterpret_cast<const GetRemoteAddressV2Response*>(
               &_GetRemoteAddressV2Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(GetRemoteAddressV2Response* other);
  friend void swap(GetRemoteAddressV2Response& a, GetRemoteAddressV2Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRemoteAddressV2Response* New() const final {
    return CreateMaybeMessage<GetRemoteAddressV2Response>(nullptr);
  }

  GetRemoteAddressV2Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetRemoteAddressV2Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetRemoteAddressV2Response& from);
  void MergeFrom(const GetRemoteAddressV2Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRemoteAddressV2Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetRemoteAddressV2Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ptre.MemoryRegion mr = 4;
  int mr_size() const;
  void clear_mr();
  static const int kMrFieldNumber = 4;
  ::ptre::MemoryRegion* mutable_mr(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >*
      mutable_mr();
  const ::ptre::MemoryRegion& mr(int index) const;
  ::ptre::MemoryRegion* add_mr();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >&
      mr() const;

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // int32 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 rank() const;
  void set_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // .ptre.BufType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ptre::BufType type() const;
  void set_type(::ptre::BufType value);

  // @@protoc_insertion_point(class_scope:ptre.GetRemoteAddressV2Response)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion > mr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 rank_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RecvRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.RecvRequest) */ {
 public:
  RecvRequest();
  virtual ~RecvRequest();

  RecvRequest(const RecvRequest& from);
  RecvRequest(RecvRequest&& from) noexcept
    : RecvRequest() {
    *this = ::std::move(from);
  }

  inline RecvRequest& operator=(const RecvRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvRequest& operator=(RecvRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecvRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvRequest* internal_default_instance() {
    return reinterpret_cast<const RecvRequest*>(
               &_RecvRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(RecvRequest* other);
  friend void swap(RecvRequest& a, RecvRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvRequest* New() const final {
    return CreateMaybeMessage<RecvRequest>(nullptr);
  }

  RecvRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecvRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecvRequest& from);
  void MergeFrom(const RecvRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecvRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.RecvRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);

  // int32 dst_rank = 1;
  void clear_dst_rank();
  static const int kDstRankFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 dst_rank() const;
  void set_dst_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // uint32 len = 2;
  void clear_len();
  static const int kLenFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 len() const;
  void set_len(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:ptre.RecvRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 dst_rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 len_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RecvResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.RecvResponse) */ {
 public:
  RecvResponse();
  virtual ~RecvResponse();

  RecvResponse(const RecvResponse& from);
  RecvResponse(RecvResponse&& from) noexcept
    : RecvResponse() {
    *this = ::std::move(from);
  }

  inline RecvResponse& operator=(const RecvResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvResponse& operator=(RecvResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RecvResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecvResponse* internal_default_instance() {
    return reinterpret_cast<const RecvResponse*>(
               &_RecvResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(RecvResponse* other);
  friend void swap(RecvResponse& a, RecvResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecvResponse* New() const final {
    return CreateMaybeMessage<RecvResponse>(nullptr);
  }

  RecvResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RecvResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RecvResponse& from);
  void MergeFrom(const RecvResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecvResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.RecvResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const std::string& buf() const;
  void set_buf(const std::string& value);
  void set_buf(std::string&& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  std::string* mutable_buf();
  std::string* release_buf();
  void set_allocated_buf(std::string* buf);

  // @@protoc_insertion_point(class_scope:ptre.RecvResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buf_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetPermitRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetPermitRequest) */ {
 public:
  GetPermitRequest();
  virtual ~GetPermitRequest();

  GetPermitRequest(const GetPermitRequest& from);
  GetPermitRequest(GetPermitRequest&& from) noexcept
    : GetPermitRequest() {
    *this = ::std::move(from);
  }

  inline GetPermitRequest& operator=(const GetPermitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPermitRequest& operator=(GetPermitRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPermitRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPermitRequest* internal_default_instance() {
    return reinterpret_cast<const GetPermitRequest*>(
               &_GetPermitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(GetPermitRequest* other);
  friend void swap(GetPermitRequest& a, GetPermitRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPermitRequest* New() const final {
    return CreateMaybeMessage<GetPermitRequest>(nullptr);
  }

  GetPermitRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPermitRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPermitRequest& from);
  void MergeFrom(const GetPermitRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPermitRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetPermitRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string var_name = 1;
  void clear_var_name();
  static const int kVarNameFieldNumber = 1;
  const std::string& var_name() const;
  void set_var_name(const std::string& value);
  void set_var_name(std::string&& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  std::string* mutable_var_name();
  std::string* release_var_name();
  void set_allocated_var_name(std::string* var_name);

  // @@protoc_insertion_point(class_scope:ptre.GetPermitRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetPermitResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.GetPermitResponse) */ {
 public:
  GetPermitResponse();
  virtual ~GetPermitResponse();

  GetPermitResponse(const GetPermitResponse& from);
  GetPermitResponse(GetPermitResponse&& from) noexcept
    : GetPermitResponse() {
    *this = ::std::move(from);
  }

  inline GetPermitResponse& operator=(const GetPermitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetPermitResponse& operator=(GetPermitResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetPermitResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPermitResponse* internal_default_instance() {
    return reinterpret_cast<const GetPermitResponse*>(
               &_GetPermitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(GetPermitResponse* other);
  friend void swap(GetPermitResponse& a, GetPermitResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPermitResponse* New() const final {
    return CreateMaybeMessage<GetPermitResponse>(nullptr);
  }

  GetPermitResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetPermitResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetPermitResponse& from);
  void MergeFrom(const GetPermitResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetPermitResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.GetPermitResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 permit = 1;
  void clear_permit();
  static const int kPermitFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 permit() const;
  void set_permit(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.GetPermitResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 permit_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttemptPushVarRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.AttemptPushVarRequest) */ {
 public:
  AttemptPushVarRequest();
  virtual ~AttemptPushVarRequest();

  AttemptPushVarRequest(const AttemptPushVarRequest& from);
  AttemptPushVarRequest(AttemptPushVarRequest&& from) noexcept
    : AttemptPushVarRequest() {
    *this = ::std::move(from);
  }

  inline AttemptPushVarRequest& operator=(const AttemptPushVarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttemptPushVarRequest& operator=(AttemptPushVarRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttemptPushVarRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttemptPushVarRequest* internal_default_instance() {
    return reinterpret_cast<const AttemptPushVarRequest*>(
               &_AttemptPushVarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(AttemptPushVarRequest* other);
  friend void swap(AttemptPushVarRequest& a, AttemptPushVarRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttemptPushVarRequest* New() const final {
    return CreateMaybeMessage<AttemptPushVarRequest>(nullptr);
  }

  AttemptPushVarRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttemptPushVarRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttemptPushVarRequest& from);
  void MergeFrom(const AttemptPushVarRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttemptPushVarRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.AttemptPushVarRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string var_name = 1;
  void clear_var_name();
  static const int kVarNameFieldNumber = 1;
  const std::string& var_name() const;
  void set_var_name(const std::string& value);
  void set_var_name(std::string&& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  std::string* mutable_var_name();
  std::string* release_var_name();
  void set_allocated_var_name(std::string* var_name);

  // int32 src_rank = 2;
  void clear_src_rank();
  static const int kSrcRankFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank() const;
  void set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.AttemptPushVarRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AttemptPushVarResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.AttemptPushVarResponse) */ {
 public:
  AttemptPushVarResponse();
  virtual ~AttemptPushVarResponse();

  AttemptPushVarResponse(const AttemptPushVarResponse& from);
  AttemptPushVarResponse(AttemptPushVarResponse&& from) noexcept
    : AttemptPushVarResponse() {
    *this = ::std::move(from);
  }

  inline AttemptPushVarResponse& operator=(const AttemptPushVarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttemptPushVarResponse& operator=(AttemptPushVarResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AttemptPushVarResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AttemptPushVarResponse* internal_default_instance() {
    return reinterpret_cast<const AttemptPushVarResponse*>(
               &_AttemptPushVarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(AttemptPushVarResponse* other);
  friend void swap(AttemptPushVarResponse& a, AttemptPushVarResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttemptPushVarResponse* New() const final {
    return CreateMaybeMessage<AttemptPushVarResponse>(nullptr);
  }

  AttemptPushVarResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AttemptPushVarResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AttemptPushVarResponse& from);
  void MergeFrom(const AttemptPushVarResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AttemptPushVarResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.AttemptPushVarResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:ptre.AttemptPushVarResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CancelPushVarRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.CancelPushVarRequest) */ {
 public:
  CancelPushVarRequest();
  virtual ~CancelPushVarRequest();

  CancelPushVarRequest(const CancelPushVarRequest& from);
  CancelPushVarRequest(CancelPushVarRequest&& from) noexcept
    : CancelPushVarRequest() {
    *this = ::std::move(from);
  }

  inline CancelPushVarRequest& operator=(const CancelPushVarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelPushVarRequest& operator=(CancelPushVarRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CancelPushVarRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelPushVarRequest* internal_default_instance() {
    return reinterpret_cast<const CancelPushVarRequest*>(
               &_CancelPushVarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(CancelPushVarRequest* other);
  friend void swap(CancelPushVarRequest& a, CancelPushVarRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelPushVarRequest* New() const final {
    return CreateMaybeMessage<CancelPushVarRequest>(nullptr);
  }

  CancelPushVarRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CancelPushVarRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CancelPushVarRequest& from);
  void MergeFrom(const CancelPushVarRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelPushVarRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.CancelPushVarRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string var_name = 1;
  void clear_var_name();
  static const int kVarNameFieldNumber = 1;
  const std::string& var_name() const;
  void set_var_name(const std::string& value);
  void set_var_name(std::string&& value);
  void set_var_name(const char* value);
  void set_var_name(const char* value, size_t size);
  std::string* mutable_var_name();
  std::string* release_var_name();
  void set_allocated_var_name(std::string* var_name);

  // int32 src_rank = 2;
  void clear_src_rank();
  static const int kSrcRankFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank() const;
  void set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:ptre.CancelPushVarRequest)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr var_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 src_rank_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CancelPushVarResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ptre.CancelPushVarResponse) */ {
 public:
  CancelPushVarResponse();
  virtual ~CancelPushVarResponse();

  CancelPushVarResponse(const CancelPushVarResponse& from);
  CancelPushVarResponse(CancelPushVarResponse&& from) noexcept
    : CancelPushVarResponse() {
    *this = ::std::move(from);
  }

  inline CancelPushVarResponse& operator=(const CancelPushVarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelPushVarResponse& operator=(CancelPushVarResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CancelPushVarResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelPushVarResponse* internal_default_instance() {
    return reinterpret_cast<const CancelPushVarResponse*>(
               &_CancelPushVarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(CancelPushVarResponse* other);
  friend void swap(CancelPushVarResponse& a, CancelPushVarResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelPushVarResponse* New() const final {
    return CreateMaybeMessage<CancelPushVarResponse>(nullptr);
  }

  CancelPushVarResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CancelPushVarResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CancelPushVarResponse& from);
  void MergeFrom(const CancelPushVarResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelPushVarResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ptre.CancelPushVarResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_rdma_5fservice_2eproto);
    return ::descriptor_table_rdma_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ptre.CancelPushVarResponse)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_rdma_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MemoryRegion

// uint64 remote_addr = 1;
inline void MemoryRegion::clear_remote_addr() {
  remote_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MemoryRegion::remote_addr() const {
  // @@protoc_insertion_point(field_get:ptre.MemoryRegion.remote_addr)
  return remote_addr_;
}
inline void MemoryRegion::set_remote_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  remote_addr_ = value;
  // @@protoc_insertion_point(field_set:ptre.MemoryRegion.remote_addr)
}

// uint32 rkey = 2;
inline void MemoryRegion::clear_rkey() {
  rkey_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MemoryRegion::rkey() const {
  // @@protoc_insertion_point(field_get:ptre.MemoryRegion.rkey)
  return rkey_;
}
inline void MemoryRegion::set_rkey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rkey_ = value;
  // @@protoc_insertion_point(field_set:ptre.MemoryRegion.rkey)
}

// -------------------------------------------------------------------

// GetLIDRequest

// -------------------------------------------------------------------

// GetLIDResponse

// int32 lid = 1;
inline void GetLIDResponse::clear_lid() {
  lid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetLIDResponse::lid() const {
  // @@protoc_insertion_point(field_get:ptre.GetLIDResponse.lid)
  return lid_;
}
inline void GetLIDResponse::set_lid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lid_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetLIDResponse.lid)
}

// -------------------------------------------------------------------

// GetQPAttrRequest

// int32 src_rank = 1;
inline void GetQPAttrRequest::clear_src_rank() {
  src_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetQPAttrRequest::src_rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetQPAttrRequest.src_rank)
  return src_rank_;
}
inline void GetQPAttrRequest::set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetQPAttrRequest.src_rank)
}

// -------------------------------------------------------------------

// GetQPAttrResponse

// uint32 qpn = 1;
inline void GetQPAttrResponse::clear_qpn() {
  qpn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetQPAttrResponse::qpn() const {
  // @@protoc_insertion_point(field_get:ptre.GetQPAttrResponse.qpn)
  return qpn_;
}
inline void GetQPAttrResponse::set_qpn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  qpn_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetQPAttrResponse.qpn)
}

// uint32 psn = 2;
inline void GetQPAttrResponse::clear_psn() {
  psn_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetQPAttrResponse::psn() const {
  // @@protoc_insertion_point(field_get:ptre.GetQPAttrResponse.psn)
  return psn_;
}
inline void GetQPAttrResponse::set_psn(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  psn_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetQPAttrResponse.psn)
}

// -------------------------------------------------------------------

// GetRemoteAddressRequest

// .ptre.BufType buf_type = 1;
inline void GetRemoteAddressRequest::clear_buf_type() {
  buf_type_ = 0;
}
inline ::ptre::BufType GetRemoteAddressRequest::buf_type() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressRequest.buf_type)
  return static_cast< ::ptre::BufType >(buf_type_);
}
inline void GetRemoteAddressRequest::set_buf_type(::ptre::BufType value) {
  
  buf_type_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressRequest.buf_type)
}

// string var_name = 2;
inline void GetRemoteAddressRequest::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetRemoteAddressRequest::var_name() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressRequest.var_name)
  return var_name_.GetNoArena();
}
inline void GetRemoteAddressRequest::set_var_name(const std::string& value) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressRequest.var_name)
}
inline void GetRemoteAddressRequest::set_var_name(std::string&& value) {
  
  var_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.GetRemoteAddressRequest.var_name)
}
inline void GetRemoteAddressRequest::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.GetRemoteAddressRequest.var_name)
}
inline void GetRemoteAddressRequest::set_var_name(const char* value, size_t size) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.GetRemoteAddressRequest.var_name)
}
inline std::string* GetRemoteAddressRequest::mutable_var_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.GetRemoteAddressRequest.var_name)
  return var_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetRemoteAddressRequest::release_var_name() {
  // @@protoc_insertion_point(field_release:ptre.GetRemoteAddressRequest.var_name)
  
  return var_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetRemoteAddressRequest::set_allocated_var_name(std::string* var_name) {
  if (var_name != nullptr) {
    
  } else {
    
  }
  var_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:ptre.GetRemoteAddressRequest.var_name)
}

// -------------------------------------------------------------------

// GetRemoteAddressResponse

// uint64 remote_addr = 1;
inline void GetRemoteAddressResponse::clear_remote_addr() {
  remote_addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetRemoteAddressResponse::remote_addr() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressResponse.remote_addr)
  return remote_addr_;
}
inline void GetRemoteAddressResponse::set_remote_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  remote_addr_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressResponse.remote_addr)
}

// uint32 rkey = 2;
inline void GetRemoteAddressResponse::clear_rkey() {
  rkey_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GetRemoteAddressResponse::rkey() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressResponse.rkey)
  return rkey_;
}
inline void GetRemoteAddressResponse::set_rkey(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  rkey_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressResponse.rkey)
}

// -------------------------------------------------------------------

// GetRemoteEnvRequest

// int32 rank = 1;
inline void GetRemoteEnvRequest::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteEnvRequest::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvRequest.rank)
  return rank_;
}
inline void GetRemoteEnvRequest::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvRequest.rank)
}

// -------------------------------------------------------------------

// GetRemoteEnvResponse

// int32 rank = 1;
inline void GetRemoteEnvResponse::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteEnvResponse::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvResponse.rank)
  return rank_;
}
inline void GetRemoteEnvResponse::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvResponse.rank)
}

// int32 lid = 2;
inline void GetRemoteEnvResponse::clear_lid() {
  lid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteEnvResponse::lid() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvResponse.lid)
  return lid_;
}
inline void GetRemoteEnvResponse::set_lid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  lid_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvResponse.lid)
}

// int32 qpn = 3;
inline void GetRemoteEnvResponse::clear_qpn() {
  qpn_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteEnvResponse::qpn() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvResponse.qpn)
  return qpn_;
}
inline void GetRemoteEnvResponse::set_qpn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  qpn_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvResponse.qpn)
}

// uint64 snp = 4;
inline void GetRemoteEnvResponse::clear_snp() {
  snp_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetRemoteEnvResponse::snp() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvResponse.snp)
  return snp_;
}
inline void GetRemoteEnvResponse::set_snp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  snp_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvResponse.snp)
}

// uint64 iid = 5;
inline void GetRemoteEnvResponse::clear_iid() {
  iid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetRemoteEnvResponse::iid() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteEnvResponse.iid)
  return iid_;
}
inline void GetRemoteEnvResponse::set_iid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  iid_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteEnvResponse.iid)
}

// -------------------------------------------------------------------

// GetRemoteParamAddressRequest

// int32 rank = 1;
inline void GetRemoteParamAddressRequest::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteParamAddressRequest::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteParamAddressRequest.rank)
  return rank_;
}
inline void GetRemoteParamAddressRequest::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteParamAddressRequest.rank)
}

// -------------------------------------------------------------------

// GetRemoteParamAddressResponse

// int32 rank = 1;
inline void GetRemoteParamAddressResponse::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteParamAddressResponse::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteParamAddressResponse.rank)
  return rank_;
}
inline void GetRemoteParamAddressResponse::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteParamAddressResponse.rank)
}

// repeated .ptre.MemoryRegion mr = 3;
inline int GetRemoteParamAddressResponse::mr_size() const {
  return mr_.size();
}
inline void GetRemoteParamAddressResponse::clear_mr() {
  mr_.Clear();
}
inline ::ptre::MemoryRegion* GetRemoteParamAddressResponse::mutable_mr(int index) {
  // @@protoc_insertion_point(field_mutable:ptre.GetRemoteParamAddressResponse.mr)
  return mr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >*
GetRemoteParamAddressResponse::mutable_mr() {
  // @@protoc_insertion_point(field_mutable_list:ptre.GetRemoteParamAddressResponse.mr)
  return &mr_;
}
inline const ::ptre::MemoryRegion& GetRemoteParamAddressResponse::mr(int index) const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteParamAddressResponse.mr)
  return mr_.Get(index);
}
inline ::ptre::MemoryRegion* GetRemoteParamAddressResponse::add_mr() {
  // @@protoc_insertion_point(field_add:ptre.GetRemoteParamAddressResponse.mr)
  return mr_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >&
GetRemoteParamAddressResponse::mr() const {
  // @@protoc_insertion_point(field_list:ptre.GetRemoteParamAddressResponse.mr)
  return mr_;
}

// -------------------------------------------------------------------

// AttemptPushRequest

// int32 rank = 1;
inline void AttemptPushRequest::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AttemptPushRequest::rank() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushRequest.rank)
  return rank_;
}
inline void AttemptPushRequest::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.AttemptPushRequest.rank)
}

// int32 vstep = 2;
inline void AttemptPushRequest::clear_vstep() {
  vstep_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AttemptPushRequest::vstep() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushRequest.vstep)
  return vstep_;
}
inline void AttemptPushRequest::set_vstep(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vstep_ = value;
  // @@protoc_insertion_point(field_set:ptre.AttemptPushRequest.vstep)
}

// -------------------------------------------------------------------

// AttemptPushResponse

// bool available = 1;
inline void AttemptPushResponse::clear_available() {
  available_ = false;
}
inline bool AttemptPushResponse::available() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushResponse.available)
  return available_;
}
inline void AttemptPushResponse::set_available(bool value) {
  
  available_ = value;
  // @@protoc_insertion_point(field_set:ptre.AttemptPushResponse.available)
}

// -------------------------------------------------------------------

// NotifyPushDoneRequest

// int32 src_rank = 1;
inline void NotifyPushDoneRequest::clear_src_rank() {
  src_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 NotifyPushDoneRequest::src_rank() const {
  // @@protoc_insertion_point(field_get:ptre.NotifyPushDoneRequest.src_rank)
  return src_rank_;
}
inline void NotifyPushDoneRequest::set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.NotifyPushDoneRequest.src_rank)
}

// string var_name = 2;
inline void NotifyPushDoneRequest::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& NotifyPushDoneRequest::var_name() const {
  // @@protoc_insertion_point(field_get:ptre.NotifyPushDoneRequest.var_name)
  return var_name_.GetNoArena();
}
inline void NotifyPushDoneRequest::set_var_name(const std::string& value) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.NotifyPushDoneRequest.var_name)
}
inline void NotifyPushDoneRequest::set_var_name(std::string&& value) {
  
  var_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.NotifyPushDoneRequest.var_name)
}
inline void NotifyPushDoneRequest::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.NotifyPushDoneRequest.var_name)
}
inline void NotifyPushDoneRequest::set_var_name(const char* value, size_t size) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.NotifyPushDoneRequest.var_name)
}
inline std::string* NotifyPushDoneRequest::mutable_var_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.NotifyPushDoneRequest.var_name)
  return var_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* NotifyPushDoneRequest::release_var_name() {
  // @@protoc_insertion_point(field_release:ptre.NotifyPushDoneRequest.var_name)
  
  return var_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyPushDoneRequest::set_allocated_var_name(std::string* var_name) {
  if (var_name != nullptr) {
    
  } else {
    
  }
  var_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:ptre.NotifyPushDoneRequest.var_name)
}

// -------------------------------------------------------------------

// NotifyPushDoneResponse

// -------------------------------------------------------------------

// BarrierRequest

// -------------------------------------------------------------------

// BarrierResponse

// bool entered = 1;
inline void BarrierResponse::clear_entered() {
  entered_ = false;
}
inline bool BarrierResponse::entered() const {
  // @@protoc_insertion_point(field_get:ptre.BarrierResponse.entered)
  return entered_;
}
inline void BarrierResponse::set_entered(bool value) {
  
  entered_ = value;
  // @@protoc_insertion_point(field_set:ptre.BarrierResponse.entered)
}

// -------------------------------------------------------------------

// GetRemoteAddressV2Request

// int32 rank = 1;
inline void GetRemoteAddressV2Request::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteAddressV2Request::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Request.rank)
  return rank_;
}
inline void GetRemoteAddressV2Request::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Request.rank)
}

// .ptre.BufType type = 2;
inline void GetRemoteAddressV2Request::clear_type() {
  type_ = 0;
}
inline ::ptre::BufType GetRemoteAddressV2Request::type() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Request.type)
  return static_cast< ::ptre::BufType >(type_);
}
inline void GetRemoteAddressV2Request::set_type(::ptre::BufType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Request.type)
}

// string name = 3;
inline void GetRemoteAddressV2Request::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetRemoteAddressV2Request::name() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Request.name)
  return name_.GetNoArena();
}
inline void GetRemoteAddressV2Request::set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Request.name)
}
inline void GetRemoteAddressV2Request::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.GetRemoteAddressV2Request.name)
}
inline void GetRemoteAddressV2Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.GetRemoteAddressV2Request.name)
}
inline void GetRemoteAddressV2Request::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.GetRemoteAddressV2Request.name)
}
inline std::string* GetRemoteAddressV2Request::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.GetRemoteAddressV2Request.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetRemoteAddressV2Request::release_name() {
  // @@protoc_insertion_point(field_release:ptre.GetRemoteAddressV2Request.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetRemoteAddressV2Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ptre.GetRemoteAddressV2Request.name)
}

// -------------------------------------------------------------------

// GetRemoteAddressV2Response

// int32 rank = 1;
inline void GetRemoteAddressV2Response::clear_rank() {
  rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetRemoteAddressV2Response::rank() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Response.rank)
  return rank_;
}
inline void GetRemoteAddressV2Response::set_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Response.rank)
}

// .ptre.BufType type = 2;
inline void GetRemoteAddressV2Response::clear_type() {
  type_ = 0;
}
inline ::ptre::BufType GetRemoteAddressV2Response::type() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Response.type)
  return static_cast< ::ptre::BufType >(type_);
}
inline void GetRemoteAddressV2Response::set_type(::ptre::BufType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Response.type)
}

// string name = 3;
inline void GetRemoteAddressV2Response::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetRemoteAddressV2Response::name() const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Response.name)
  return name_.GetNoArena();
}
inline void GetRemoteAddressV2Response::set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.GetRemoteAddressV2Response.name)
}
inline void GetRemoteAddressV2Response::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.GetRemoteAddressV2Response.name)
}
inline void GetRemoteAddressV2Response::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.GetRemoteAddressV2Response.name)
}
inline void GetRemoteAddressV2Response::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.GetRemoteAddressV2Response.name)
}
inline std::string* GetRemoteAddressV2Response::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.GetRemoteAddressV2Response.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetRemoteAddressV2Response::release_name() {
  // @@protoc_insertion_point(field_release:ptre.GetRemoteAddressV2Response.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetRemoteAddressV2Response::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ptre.GetRemoteAddressV2Response.name)
}

// repeated .ptre.MemoryRegion mr = 4;
inline int GetRemoteAddressV2Response::mr_size() const {
  return mr_.size();
}
inline void GetRemoteAddressV2Response::clear_mr() {
  mr_.Clear();
}
inline ::ptre::MemoryRegion* GetRemoteAddressV2Response::mutable_mr(int index) {
  // @@protoc_insertion_point(field_mutable:ptre.GetRemoteAddressV2Response.mr)
  return mr_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >*
GetRemoteAddressV2Response::mutable_mr() {
  // @@protoc_insertion_point(field_mutable_list:ptre.GetRemoteAddressV2Response.mr)
  return &mr_;
}
inline const ::ptre::MemoryRegion& GetRemoteAddressV2Response::mr(int index) const {
  // @@protoc_insertion_point(field_get:ptre.GetRemoteAddressV2Response.mr)
  return mr_.Get(index);
}
inline ::ptre::MemoryRegion* GetRemoteAddressV2Response::add_mr() {
  // @@protoc_insertion_point(field_add:ptre.GetRemoteAddressV2Response.mr)
  return mr_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ptre::MemoryRegion >&
GetRemoteAddressV2Response::mr() const {
  // @@protoc_insertion_point(field_list:ptre.GetRemoteAddressV2Response.mr)
  return mr_;
}

// -------------------------------------------------------------------

// RecvRequest

// int32 dst_rank = 1;
inline void RecvRequest::clear_dst_rank() {
  dst_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RecvRequest::dst_rank() const {
  // @@protoc_insertion_point(field_get:ptre.RecvRequest.dst_rank)
  return dst_rank_;
}
inline void RecvRequest::set_dst_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dst_rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.RecvRequest.dst_rank)
}

// uint32 len = 2;
inline void RecvRequest::clear_len() {
  len_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RecvRequest::len() const {
  // @@protoc_insertion_point(field_get:ptre.RecvRequest.len)
  return len_;
}
inline void RecvRequest::set_len(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:ptre.RecvRequest.len)
}

// string name = 3;
inline void RecvRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& RecvRequest::name() const {
  // @@protoc_insertion_point(field_get:ptre.RecvRequest.name)
  return name_.GetNoArena();
}
inline void RecvRequest::set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.RecvRequest.name)
}
inline void RecvRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.RecvRequest.name)
}
inline void RecvRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.RecvRequest.name)
}
inline void RecvRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.RecvRequest.name)
}
inline std::string* RecvRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.RecvRequest.name)
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RecvRequest::release_name() {
  // @@protoc_insertion_point(field_release:ptre.RecvRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RecvRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ptre.RecvRequest.name)
}

// -------------------------------------------------------------------

// RecvResponse

// bytes buf = 1;
inline void RecvResponse::clear_buf() {
  buf_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& RecvResponse::buf() const {
  // @@protoc_insertion_point(field_get:ptre.RecvResponse.buf)
  return buf_.GetNoArena();
}
inline void RecvResponse::set_buf(const std::string& value) {
  
  buf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.RecvResponse.buf)
}
inline void RecvResponse::set_buf(std::string&& value) {
  
  buf_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.RecvResponse.buf)
}
inline void RecvResponse::set_buf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.RecvResponse.buf)
}
inline void RecvResponse::set_buf(const void* value, size_t size) {
  
  buf_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.RecvResponse.buf)
}
inline std::string* RecvResponse::mutable_buf() {
  
  // @@protoc_insertion_point(field_mutable:ptre.RecvResponse.buf)
  return buf_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* RecvResponse::release_buf() {
  // @@protoc_insertion_point(field_release:ptre.RecvResponse.buf)
  
  return buf_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void RecvResponse::set_allocated_buf(std::string* buf) {
  if (buf != nullptr) {
    
  } else {
    
  }
  buf_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:ptre.RecvResponse.buf)
}

// -------------------------------------------------------------------

// GetPermitRequest

// string var_name = 1;
inline void GetPermitRequest::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetPermitRequest::var_name() const {
  // @@protoc_insertion_point(field_get:ptre.GetPermitRequest.var_name)
  return var_name_.GetNoArena();
}
inline void GetPermitRequest::set_var_name(const std::string& value) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.GetPermitRequest.var_name)
}
inline void GetPermitRequest::set_var_name(std::string&& value) {
  
  var_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.GetPermitRequest.var_name)
}
inline void GetPermitRequest::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.GetPermitRequest.var_name)
}
inline void GetPermitRequest::set_var_name(const char* value, size_t size) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.GetPermitRequest.var_name)
}
inline std::string* GetPermitRequest::mutable_var_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.GetPermitRequest.var_name)
  return var_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetPermitRequest::release_var_name() {
  // @@protoc_insertion_point(field_release:ptre.GetPermitRequest.var_name)
  
  return var_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetPermitRequest::set_allocated_var_name(std::string* var_name) {
  if (var_name != nullptr) {
    
  } else {
    
  }
  var_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:ptre.GetPermitRequest.var_name)
}

// -------------------------------------------------------------------

// GetPermitResponse

// int32 permit = 1;
inline void GetPermitResponse::clear_permit() {
  permit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GetPermitResponse::permit() const {
  // @@protoc_insertion_point(field_get:ptre.GetPermitResponse.permit)
  return permit_;
}
inline void GetPermitResponse::set_permit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  permit_ = value;
  // @@protoc_insertion_point(field_set:ptre.GetPermitResponse.permit)
}

// -------------------------------------------------------------------

// AttemptPushVarRequest

// string var_name = 1;
inline void AttemptPushVarRequest::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AttemptPushVarRequest::var_name() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushVarRequest.var_name)
  return var_name_.GetNoArena();
}
inline void AttemptPushVarRequest::set_var_name(const std::string& value) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.AttemptPushVarRequest.var_name)
}
inline void AttemptPushVarRequest::set_var_name(std::string&& value) {
  
  var_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.AttemptPushVarRequest.var_name)
}
inline void AttemptPushVarRequest::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.AttemptPushVarRequest.var_name)
}
inline void AttemptPushVarRequest::set_var_name(const char* value, size_t size) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.AttemptPushVarRequest.var_name)
}
inline std::string* AttemptPushVarRequest::mutable_var_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.AttemptPushVarRequest.var_name)
  return var_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AttemptPushVarRequest::release_var_name() {
  // @@protoc_insertion_point(field_release:ptre.AttemptPushVarRequest.var_name)
  
  return var_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AttemptPushVarRequest::set_allocated_var_name(std::string* var_name) {
  if (var_name != nullptr) {
    
  } else {
    
  }
  var_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:ptre.AttemptPushVarRequest.var_name)
}

// int32 src_rank = 2;
inline void AttemptPushVarRequest::clear_src_rank() {
  src_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AttemptPushVarRequest::src_rank() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushVarRequest.src_rank)
  return src_rank_;
}
inline void AttemptPushVarRequest::set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.AttemptPushVarRequest.src_rank)
}

// -------------------------------------------------------------------

// AttemptPushVarResponse

// bool result = 1;
inline void AttemptPushVarResponse::clear_result() {
  result_ = false;
}
inline bool AttemptPushVarResponse::result() const {
  // @@protoc_insertion_point(field_get:ptre.AttemptPushVarResponse.result)
  return result_;
}
inline void AttemptPushVarResponse::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ptre.AttemptPushVarResponse.result)
}

// -------------------------------------------------------------------

// CancelPushVarRequest

// string var_name = 1;
inline void CancelPushVarRequest::clear_var_name() {
  var_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CancelPushVarRequest::var_name() const {
  // @@protoc_insertion_point(field_get:ptre.CancelPushVarRequest.var_name)
  return var_name_.GetNoArena();
}
inline void CancelPushVarRequest::set_var_name(const std::string& value) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ptre.CancelPushVarRequest.var_name)
}
inline void CancelPushVarRequest::set_var_name(std::string&& value) {
  
  var_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ptre.CancelPushVarRequest.var_name)
}
inline void CancelPushVarRequest::set_var_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ptre.CancelPushVarRequest.var_name)
}
inline void CancelPushVarRequest::set_var_name(const char* value, size_t size) {
  
  var_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ptre.CancelPushVarRequest.var_name)
}
inline std::string* CancelPushVarRequest::mutable_var_name() {
  
  // @@protoc_insertion_point(field_mutable:ptre.CancelPushVarRequest.var_name)
  return var_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CancelPushVarRequest::release_var_name() {
  // @@protoc_insertion_point(field_release:ptre.CancelPushVarRequest.var_name)
  
  return var_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CancelPushVarRequest::set_allocated_var_name(std::string* var_name) {
  if (var_name != nullptr) {
    
  } else {
    
  }
  var_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), var_name);
  // @@protoc_insertion_point(field_set_allocated:ptre.CancelPushVarRequest.var_name)
}

// int32 src_rank = 2;
inline void CancelPushVarRequest::clear_src_rank() {
  src_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CancelPushVarRequest::src_rank() const {
  // @@protoc_insertion_point(field_get:ptre.CancelPushVarRequest.src_rank)
  return src_rank_;
}
inline void CancelPushVarRequest::set_src_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  src_rank_ = value;
  // @@protoc_insertion_point(field_set:ptre.CancelPushVarRequest.src_rank)
}

// -------------------------------------------------------------------

// CancelPushVarResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ptre

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ptre::BufType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ptre::BufType>() {
  return ::ptre::BufType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_rdma_5fservice_2eproto
