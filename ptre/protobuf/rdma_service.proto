syntax = "proto3";

package ptre;

service Rdma {
  rpc GetRemoteEnv(GetRemoteEnvRequest)
    returns (GetRemoteEnvResponse);

  rpc GetRemoteAddress(GetRemoteAddressRequest)
    returns (GetRemoteAddressResponse);

  rpc GetRemoteParamAddress(GetRemoteParamAddressRequest)
    returns (GetRemoteParamAddressResponse);

  rpc AttemptPush(AttemptPushRequest)
    returns (AttemptPushResponse);

  rpc AckPushDone(AckPushDoneRequest)
    returns (AckPushDoneResponse);

  rpc Barrier(BarrierRequest)
    returns (BarrierResponse);

  rpc GetRemoteAddressV2(GetRemoteAddressV2Request)
    returns (GetRemoteAddressV2Response);
}

message Channel {
  int32 lid = 1;
  int32 qpn = 2;
  int32 psn = 3;
  uint64 snp = 4;
  uint64 iid = 5;
}

message MemoryRegion {
  uint64 remote_addr = 1;
  uint32 rkey = 2;
}

message GetRemoteEnvRequest {
  int32 rank = 1;
}

message GetRemoteEnvResponse {
  int32 rank = 1;
  int32 lid = 2;
  int32 qpn = 3;
  uint64 snp = 4;  // global subnet prefix
  uint64 iid = 5;  // global interface id
}

message GetRemoteAddressRequest {
  int32 rank = 1;
  string tensor_name = 2;
  //Channel channel = 3;
  //repeated MemoryRegion mr = 4;
}

message GetRemoteAddressResponse {
  int32 rank = 1;
  string tensor_name = 2;
  Channel channel = 3;
  repeated MemoryRegion mr = 4;
}

message GetRemoteParamAddressRequest {
  int32 rank = 1;
}

message GetRemoteParamAddressResponse {
  int32 rank = 1;
  Channel channel = 2;
  repeated MemoryRegion mr = 3;
}

message AttemptPushRequest {
  int32 rank = 1;
  int32 vstep = 2;
}

message AttemptPushResponse {
  bool available = 1;
}

message AckPushDoneRequest {
  int32 rank = 1;
}

message AckPushDoneResponse {
}

message BarrierRequest {
}
message BarrierResponse {
  bool entered = 1;
}

enum BufType {
  BUF_TYPE_RAW = 0;
  BUF_TYPE_RECV_BUF = 1;
  BUF_TYPE_SEND_BUF = 2;
  BUF_TYPE_AGG_BUF_STATE = 3;
  BUF_TYPE_AGG_BUF = 4;
  BUF_TYPE_FLAG_RECV = 5;
  BUF_TYPE_FLAG_SEND = 6;
  BUF_TYPE_BARRIER_COUNTER = 7;
  BUF_TYPE_BARRIER_RELEASE = 8;
}

message GetRemoteAddressV2Request {
  int32 rank = 1;
  BufType type = 2;
  string name = 3;
}

message GetRemoteAddressV2Response {
  int32 rank = 1;
  BufType type = 2;
  string name = 3;
  repeated MemoryRegion mr = 4;
}
